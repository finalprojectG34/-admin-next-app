function cov_5y9y4rzfh(){var path="C:\\Users\\nathn\\Desktop\\final project\\admin-next-app\\instrument\\.next\\server\\pages\\_app.js";var hash="cf98e148e88345bd05a8e40bac5ec7772c2ef229";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\nathn\\Desktop\\final project\\admin-next-app\\instrument\\.next\\server\\pages\\_app.js",statementMap:{"0":{start:{line:1,column:35},end:{line:1,column:124}},"1":{start:{line:1,column:134},end:{line:1,column:176}},"2":{start:{line:1,column:188},end:{line:1,column:217}},"3":{start:{line:1,column:226},end:{line:1,column:240}},"4":{start:{line:1,column:258},end:{line:1,column:4517}},"5":{start:{line:1,column:4531},end:{line:1,column:4560}},"6":{start:{line:1,column:4561},end:{line:1,column:4638}},"7":{start:{line:1,column:4609},end:{line:1,column:4637}},"8":{start:{line:1,column:4657},end:{line:1,column:4671}},"9":{start:{line:2,column:0},end:{line:2,column:50}},"10":{start:{line:2,column:26},end:{line:2,column:48}},"11":{start:{line:2,column:51},end:{line:2,column:73}},"12":{start:{line:2,column:74},end:{line:2,column:91}},"13":{start:{line:2,column:91},end:{line:2,column:115}},"14":{start:{line:9,column:3},end:{line:38,column:460}},"15":{start:{line:9,column:9},end:{line:9,column:33}},"16":{start:{line:9,column:46},end:{line:9,column:72}},"17":{start:{line:9,column:74},end:{line:9,column:98}},"18":{start:{line:9,column:98},end:{line:9,column:122}},"19":{start:{line:9,column:122},end:{line:9,column:146}},"20":{start:{line:9,column:146},end:{line:9,column:173}},"21":{start:{line:9,column:173},end:{line:9,column:197}},"22":{start:{line:9,column:197},end:{line:37,column:178}},"23":{start:{line:11,column:110},end:{line:11,column:134}},"24":{start:{line:11,column:134},end:{line:11,column:158}},"25":{start:{line:11,column:158},end:{line:11,column:3168}},"26":{start:{line:13,column:114},end:{line:13,column:138}},"27":{start:{line:13,column:138},end:{line:13,column:162}},"28":{start:{line:13,column:162},end:{line:13,column:8777}},"29":{start:{line:15,column:121},end:{line:15,column:145}},"30":{start:{line:15,column:145},end:{line:15,column:169}},"31":{start:{line:15,column:169},end:{line:15,column:9888}},"32":{start:{line:17,column:135},end:{line:17,column:159}},"33":{start:{line:17,column:159},end:{line:17,column:183}},"34":{start:{line:17,column:183},end:{line:17,column:21716}},"35":{start:{line:19,column:123},end:{line:19,column:147}},"36":{start:{line:19,column:147},end:{line:19,column:171}},"37":{start:{line:19,column:171},end:{line:19,column:10763}},"38":{start:{line:21,column:125},end:{line:21,column:149}},"39":{start:{line:21,column:149},end:{line:21,column:174}},"40":{start:{line:21,column:174},end:{line:21,column:15385}},"41":{start:{line:23,column:128},end:{line:23,column:152}},"42":{start:{line:23,column:152},end:{line:23,column:177}},"43":{start:{line:23,column:177},end:{line:23,column:14982}},"44":{start:{line:25,column:65},end:{line:25,column:89}},"45":{start:{line:25,column:89},end:{line:25,column:114}},"46":{start:{line:25,column:114},end:{line:25,column:4821}},"47":{start:{line:27,column:48},end:{line:27,column:72}},"48":{start:{line:29,column:65},end:{line:29,column:90}},"49":{start:{line:29,column:90},end:{line:29,column:115}},"50":{start:{line:29,column:115},end:{line:29,column:156}},"51":{start:{line:31,column:78},end:{line:31,column:103}},"52":{start:{line:31,column:103},end:{line:31,column:128}},"53":{start:{line:31,column:128},end:{line:31,column:182}},"54":{start:{line:33,column:64},end:{line:33,column:89}},"55":{start:{line:33,column:89},end:{line:33,column:114}},"56":{start:{line:33,column:114},end:{line:33,column:154}},"57":{start:{line:35,column:71},end:{line:35,column:96}},"58":{start:{line:35,column:96},end:{line:35,column:121}},"59":{start:{line:35,column:121},end:{line:35,column:168}},"60":{start:{line:37,column:72},end:{line:37,column:97}},"61":{start:{line:37,column:97},end:{line:37,column:122}},"62":{start:{line:37,column:122},end:{line:37,column:170}},"63":{start:{line:38,column:25},end:{line:38,column:82}},"64":{start:{line:38,column:84},end:{line:38,column:109}},"65":{start:{line:38,column:109},end:{line:38,column:140}},"66":{start:{line:38,column:140},end:{line:38,column:165}},"67":{start:{line:38,column:186},end:{line:38,column:307}},"68":{start:{line:38,column:197},end:{line:38,column:222}},"69":{start:{line:38,column:222},end:{line:38,column:247}},"70":{start:{line:38,column:247},end:{line:38,column:306}},"71":{start:{line:38,column:333},end:{line:38,column:393}},"72":{start:{line:38,column:395},end:{line:38,column:420}},"73":{start:{line:38,column:420},end:{line:38,column:455}}},fnMap:{"0":{name:"cov_1q72jli5gt",decl:{start:{line:1,column:9},end:{line:1,column:23}},loc:{start:{line:1,column:25},end:{line:2,column:74}},line:1},"1":{name:"(anonymous_1)",decl:{start:{line:2,column:15},end:{line:2,column:16}},loc:{start:{line:2,column:25},end:{line:2,column:49}},line:2},"2":{name:"(anonymous_2)",decl:{start:{line:9,column:4},end:{line:9,column:5}},loc:{start:{line:9,column:8},end:{line:38,column:456}},line:9},"3":{name:"(anonymous_3)",decl:{start:{line:11,column:29},end:{line:11,column:30}},loc:{start:{line:11,column:96},end:{line:11,column:3174}},line:11},"4":{name:"(anonymous_4)",decl:{start:{line:13,column:33},end:{line:13,column:34}},loc:{start:{line:13,column:100},end:{line:13,column:8783}},line:13},"5":{name:"(anonymous_5)",decl:{start:{line:15,column:40},end:{line:15,column:41}},loc:{start:{line:15,column:107},end:{line:15,column:9894}},line:15},"6":{name:"(anonymous_6)",decl:{start:{line:17,column:54},end:{line:17,column:55}},loc:{start:{line:17,column:121},end:{line:17,column:21722}},line:17},"7":{name:"(anonymous_7)",decl:{start:{line:19,column:42},end:{line:19,column:43}},loc:{start:{line:19,column:109},end:{line:19,column:10769}},line:19},"8":{name:"(anonymous_8)",decl:{start:{line:21,column:44},end:{line:21,column:45}},loc:{start:{line:21,column:111},end:{line:21,column:15391}},line:21},"9":{name:"(anonymous_9)",decl:{start:{line:23,column:47},end:{line:23,column:48}},loc:{start:{line:23,column:114},end:{line:23,column:14988}},line:23},"10":{name:"(anonymous_10)",decl:{start:{line:25,column:56},end:{line:25,column:57}},loc:{start:{line:25,column:64},end:{line:25,column:4827}},line:25},"11":{name:"(anonymous_11)",decl:{start:{line:27,column:38},end:{line:27,column:39}},loc:{start:{line:27,column:42},end:{line:27,column:73}},line:27},"12":{name:"(anonymous_12)",decl:{start:{line:29,column:43},end:{line:29,column:44}},loc:{start:{line:29,column:51},end:{line:29,column:162}},line:29},"13":{name:"(anonymous_13)",decl:{start:{line:31,column:56},end:{line:31,column:57}},loc:{start:{line:31,column:64},end:{line:31,column:188}},line:31},"14":{name:"(anonymous_14)",decl:{start:{line:33,column:42},end:{line:33,column:43}},loc:{start:{line:33,column:50},end:{line:33,column:160}},line:33},"15":{name:"(anonymous_15)",decl:{start:{line:35,column:49},end:{line:35,column:50}},loc:{start:{line:35,column:57},end:{line:35,column:174}},line:35},"16":{name:"(anonymous_16)",decl:{start:{line:37,column:50},end:{line:37,column:51}},loc:{start:{line:37,column:58},end:{line:37,column:176}},line:37},"17":{name:"(anonymous_17)",decl:{start:{line:38,column:186},end:{line:38,column:187}},loc:{start:{line:38,column:196},end:{line:38,column:307}},line:38}},branchMap:{"0":{loc:{start:{line:1,column:4531},end:{line:1,column:4560}},type:"binary-expr",locations:[{start:{line:1,column:4531},end:{line:1,column:4542}},{start:{line:1,column:4545},end:{line:1,column:4559}}],line:1},"1":{loc:{start:{line:1,column:4561},end:{line:1,column:4638}},type:"if",locations:[{start:{line:1,column:4561},end:{line:1,column:4638}},{start:{line:1,column:4561},end:{line:1,column:4638}}],line:1},"2":{loc:{start:{line:1,column:4564},end:{line:1,column:4607}},type:"binary-expr",locations:[{start:{line:1,column:4564},end:{line:1,column:4579}},{start:{line:1,column:4581},end:{line:1,column:4607}}],line:1}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},inputSourceMap:{version:3,names:["exports","id","ids","modules","__unused_webpack_module","__webpack_exports__","__webpack_require__","eval","module","require","C","__webpack_exec__","moduleId","s"],sources:["_app.js"],sourcesContent:["/*\n * ATTENTION: An \"eval-source-map\" devtool has been used.\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file with attached SourceMaps in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\n */\n(() => {\nvar exports = {};\nexports.id = \"pages/_app\";\nexports.ids = [\"pages/_app\"];\nexports.modules = {\n\n/***/ \"./config.js\":\n/*!*******************!*\\\n  !*** ./config.js ***!\n  \\*******************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (__WEBPACK_DEFAULT_EXPORT__)\\n/* harmony export */ });\\nfunction cov_23gsmht5ry() {\\n  var path = \\\"C:\\\\\\\\Users\\\\\\\\nathn\\\\\\\\Desktop\\\\\\\\final project\\\\\\\\admin-next-app\\\\\\\\config.js\\\";\\n  var hash = \\\"5ec94783acb8ca0c2a8e7979453b06fbae04a7f6\\\";\\n  var global = new Function(\\\"return this\\\")();\\n  var gcv = \\\"__coverage__\\\";\\n  var coverageData = {\\n    path: \\\"C:\\\\\\\\Users\\\\\\\\nathn\\\\\\\\Desktop\\\\\\\\final project\\\\\\\\admin-next-app\\\\\\\\config.js\\\",\\n    statementMap: {\\n      \\\"0\\\": {\\n        start: {\\n          line: 1,\\n          column: 15\\n        },\\n        end: {\\n          line: 8,\\n          column: 1\\n        }\\n      }\\n    },\\n    fnMap: {},\\n    branchMap: {},\\n    s: {\\n      \\\"0\\\": 0\\n    },\\n    f: {},\\n    b: {},\\n    _coverageSchema: \\\"1a1c01bbd47fc00a2c39e90264f33305004495a9\\\",\\n    hash: \\\"5ec94783acb8ca0c2a8e7979453b06fbae04a7f6\\\"\\n  };\\n  var coverage = global[gcv] || (global[gcv] = {});\\n\\n  if (!coverage[path] || coverage[path].hash !== hash) {\\n    coverage[path] = coverageData;\\n  }\\n\\n  var actualCoverage = coverage[path];\\n  {\\n    // @ts-ignore\\n    cov_23gsmht5ry = function () {\\n      return actualCoverage;\\n    };\\n  }\\n  return actualCoverage;\\n}\\n\\ncov_23gsmht5ry();\\nconst config = (cov_23gsmht5ry().s[0]++, {\\n  // basename: only at build time to set, and Don't add '/' at end off BASENAME for breadcrumbs, also Don't put only '/' use blank('') instead,\\n  // like '/berry-material-react/react/default'\\n  basename: '/',\\n  defaultPath: '/dashboard',\\n  fontFamily: `'Roboto', sans-serif`,\\n  borderRadius: 12\\n});\\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (config);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb25maWcuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFlWTs7Ozs7Ozs7O0FBZlosTUFBTUEsTUFBTSw2QkFBRztBQUNiO0FBQ0E7QUFDQUMsRUFBQUEsUUFBUSxFQUFFLEdBSEc7QUFJYkMsRUFBQUEsV0FBVyxFQUFFLFlBSkE7QUFLYkMsRUFBQUEsVUFBVSxFQUFHLHNCQUxBO0FBTWJDLEVBQUFBLFlBQVksRUFBRTtBQU5ELENBQUgsQ0FBWjtBQVNBLGlFQUFlSixNQUFmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWRtaW4tbmV4dC1hcHAvLi9jb25maWcuanM/YzJiMyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjb25maWcgPSB7XHJcbiAgLy8gYmFzZW5hbWU6IG9ubHkgYXQgYnVpbGQgdGltZSB0byBzZXQsIGFuZCBEb24ndCBhZGQgJy8nIGF0IGVuZCBvZmYgQkFTRU5BTUUgZm9yIGJyZWFkY3J1bWJzLCBhbHNvIERvbid0IHB1dCBvbmx5ICcvJyB1c2UgYmxhbmsoJycpIGluc3RlYWQsXHJcbiAgLy8gbGlrZSAnL2JlcnJ5LW1hdGVyaWFsLXJlYWN0L3JlYWN0L2RlZmF1bHQnXHJcbiAgYmFzZW5hbWU6ICcvJyxcclxuICBkZWZhdWx0UGF0aDogJy9kYXNoYm9hcmQnLFxyXG4gIGZvbnRGYW1pbHk6IGAnUm9ib3RvJywgc2Fucy1zZXJpZmAsXHJcbiAgYm9yZGVyUmFkaXVzOiAxMlxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY29uZmlnO1xyXG4iXSwibmFtZXMiOlsiY29uZmlnIiwiYmFzZW5hbWUiLCJkZWZhdWx0UGF0aCIsImZvbnRGYW1pbHkiLCJib3JkZXJSYWRpdXMiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./config.js\\n\");\n\n/***/ }),\n\n/***/ \"./pages/_app.js\":\n/*!***********************!*\\\n  !*** ./pages/_app.js ***!\n  \\***********************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (__WEBPACK_DEFAULT_EXPORT__)\\n/* harmony export */ });\\n/* harmony import */ var _apollo_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @apollo/client */ \\\"@apollo/client\\\");\\n/* harmony import */ var _apollo_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_apollo_client__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mui/material */ \\\"@mui/material\\\");\\n/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_mui_material__WEBPACK_IMPORTED_MODULE_1__);\\n/* harmony import */ var _src_apollo_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/apollo/client */ \\\"./src/apollo/client.js\\\");\\n/* harmony import */ var _styles_themes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../styles/themes */ \\\"./styles/themes/index.js\\\");\\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../config */ \\\"./config.js\\\");\\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../styles/globals.css */ \\\"./styles/globals.css\\\");\\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_5__);\\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react/jsx-dev-runtime */ \\\"react/jsx-dev-runtime\\\");\\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__);\\nvar _jsxFileName = \\\"C:\\\\\\\\Users\\\\\\\\nathn\\\\\\\\Desktop\\\\\\\\final project\\\\\\\\admin-next-app\\\\\\\\pages\\\\\\\\_app.js\\\";\\n\\nfunction cov_1xki921t1v() {\\n  var path = \\\"C:\\\\\\\\Users\\\\\\\\nathn\\\\\\\\Desktop\\\\\\\\final project\\\\\\\\admin-next-app\\\\\\\\pages\\\\\\\\_app.js\\\";\\n  var hash = \\\"c4fa241ee60d6eb08256f9902d48e59ff047363b\\\";\\n  var global = new Function(\\\"return this\\\")();\\n  var gcv = \\\"__coverage__\\\";\\n  var coverageData = {\\n    path: \\\"C:\\\\\\\\Users\\\\\\\\nathn\\\\\\\\Desktop\\\\\\\\final project\\\\\\\\admin-next-app\\\\\\\\pages\\\\\\\\_app.js\\\",\\n    statementMap: {\\n      \\\"0\\\": {\\n        start: {\\n          line: 12,\\n          column: 4\\n        },\\n        end: {\\n          line: 25,\\n          column: 5\\n        }\\n      }\\n    },\\n    fnMap: {\\n      \\\"0\\\": {\\n        name: \\\"MyApp\\\",\\n        decl: {\\n          start: {\\n            line: 11,\\n            column: 9\\n          },\\n          end: {\\n            line: 11,\\n            column: 14\\n          }\\n        },\\n        loc: {\\n          start: {\\n            line: 11,\\n            column: 39\\n          },\\n          end: {\\n            line: 26,\\n            column: 1\\n          }\\n        },\\n        line: 11\\n      }\\n    },\\n    branchMap: {},\\n    s: {\\n      \\\"0\\\": 0\\n    },\\n    f: {\\n      \\\"0\\\": 0\\n    },\\n    b: {},\\n    _coverageSchema: \\\"1a1c01bbd47fc00a2c39e90264f33305004495a9\\\",\\n    hash: \\\"c4fa241ee60d6eb08256f9902d48e59ff047363b\\\"\\n  };\\n  var coverage = global[gcv] || (global[gcv] = {});\\n\\n  if (!coverage[path] || coverage[path].hash !== hash) {\\n    coverage[path] = coverageData;\\n  }\\n\\n  var actualCoverage = coverage[path];\\n  {\\n    // @ts-ignore\\n    cov_1xki921t1v = function () {\\n      return actualCoverage;\\n    };\\n  }\\n  return actualCoverage;\\n}\\n\\ncov_1xki921t1v();\\n\\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\\n\\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\\n\\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\\n\\n\\n\\n // import {store} from \\\"../src/store\\\";\\n\\n\\n\\n\\n\\n\\nfunction MyApp({\\n  Component,\\n  pageProps\\n}) {\\n  cov_1xki921t1v().f[0]++;\\n  cov_1xki921t1v().s[0]++;\\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(_apollo_client__WEBPACK_IMPORTED_MODULE_0__.ApolloProvider, {\\n    client: _src_apollo_client__WEBPACK_IMPORTED_MODULE_2__.client,\\n    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(_mui_material__WEBPACK_IMPORTED_MODULE_1__.ThemeProvider, {\\n      theme: (0,_styles_themes__WEBPACK_IMPORTED_MODULE_3__[\\\"default\\\"])({\\n        isOpen: [],\\n        // for active default menu\\n        fontFamily: _config__WEBPACK_IMPORTED_MODULE_4__[\\\"default\\\"].fontFamily,\\n        borderRadius: _config__WEBPACK_IMPORTED_MODULE_4__[\\\"default\\\"].borderRadius,\\n        opened: false\\n      }),\\n      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(Component, _objectSpread({}, pageProps), void 0, false, {\\n        fileName: _jsxFileName,\\n        lineNumber: 21,\\n        columnNumber: 17\\n      }, this)\\n    }, void 0, false, {\\n      fileName: _jsxFileName,\\n      lineNumber: 15,\\n      columnNumber: 13\\n    }, this)\\n  }, void 0, false, {\\n    fileName: _jsxFileName,\\n    lineNumber: 13,\\n    columnNumber: 9\\n  }, this);\\n}\\n\\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MyApp);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWVZOzs7Ozs7Ozs7Ozs7Ozs7O0FBZlo7QUFDQTtDQUdBOztBQUNBO0FBQ0E7QUFFQTs7O0FBRUEsU0FBU0ssS0FBVCxDQUFlO0FBQUNDLEVBQUFBLFNBQUQ7QUFBWUMsRUFBQUE7QUFBWixDQUFmLEVBQXVDO0FBQUE7QUFBQTtBQUNuQyxzQkFDSSw4REFBQywwREFBRDtBQUFnQixVQUFNLEVBQUVMLHNEQUF4QjtBQUFBLDJCQUVJLDhEQUFDLHdEQUFEO0FBQWUsV0FBSyxFQUFFQywwREFBTSxDQUFDO0FBQ3pCSyxRQUFBQSxNQUFNLEVBQUUsRUFEaUI7QUFDYjtBQUNaQyxRQUFBQSxVQUFVLEVBQUVMLDBEQUZhO0FBR3pCTSxRQUFBQSxZQUFZLEVBQUVOLDREQUhXO0FBSXpCTyxRQUFBQSxNQUFNLEVBQUU7QUFKaUIsT0FBRCxDQUE1QjtBQUFBLDZCQU1JLDhEQUFDLFNBQUQsb0JBQWVKLFNBQWY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQU5KO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFGSjtBQUFBO0FBQUE7QUFBQTtBQUFBLFVBREo7QUFjSDs7QUFFRCxpRUFBZUYsS0FBZiIsInNvdXJjZXMiOlsid2VicGFjazovL2FkbWluLW5leHQtYXBwLy4vcGFnZXMvX2FwcC5qcz9lMGFkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QXBvbGxvUHJvdmlkZXJ9IGZyb20gXCJAYXBvbGxvL2NsaWVudFwiO1xuaW1wb3J0IHtUaGVtZVByb3ZpZGVyfSBmcm9tIFwiQG11aS9tYXRlcmlhbFwiO1xuXG5pbXBvcnQge2NsaWVudH0gZnJvbSBcIi4uL3NyYy9hcG9sbG8vY2xpZW50XCI7XG4vLyBpbXBvcnQge3N0b3JlfSBmcm9tIFwiLi4vc3JjL3N0b3JlXCI7XG5pbXBvcnQgdGhlbWVzIGZyb20gXCIuLi9zdHlsZXMvdGhlbWVzXCI7XG5pbXBvcnQgY29uZmlnIGZyb20gXCIuLi9jb25maWdcIjtcblxuaW1wb3J0ICcuLi9zdHlsZXMvZ2xvYmFscy5jc3MnO1xuXG5mdW5jdGlvbiBNeUFwcCh7Q29tcG9uZW50LCBwYWdlUHJvcHN9KSB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPEFwb2xsb1Byb3ZpZGVyIGNsaWVudD17Y2xpZW50fT5cbiAgICAgICAgICAgIHsvKjxQcm92aWRlciBzdG9yZT17c3RvcmV9PiovfVxuICAgICAgICAgICAgPFRoZW1lUHJvdmlkZXIgdGhlbWU9e3RoZW1lcyh7XG4gICAgICAgICAgICAgICAgaXNPcGVuOiBbXSwgLy8gZm9yIGFjdGl2ZSBkZWZhdWx0IG1lbnVcbiAgICAgICAgICAgICAgICBmb250RmFtaWx5OiBjb25maWcuZm9udEZhbWlseSxcbiAgICAgICAgICAgICAgICBib3JkZXJSYWRpdXM6IGNvbmZpZy5ib3JkZXJSYWRpdXMsXG4gICAgICAgICAgICAgICAgb3BlbmVkOiBmYWxzZVxuICAgICAgICAgICAgfSl9PlxuICAgICAgICAgICAgICAgIDxDb21wb25lbnQgey4uLnBhZ2VQcm9wc30gLz5cbiAgICAgICAgICAgIDwvVGhlbWVQcm92aWRlcj5cbiAgICAgICAgICAgIHsvKjwvUHJvdmlkZXI+Ki99XG4gICAgICAgIDwvQXBvbGxvUHJvdmlkZXI+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBNeUFwcFxuIl0sIm5hbWVzIjpbIkFwb2xsb1Byb3ZpZGVyIiwiVGhlbWVQcm92aWRlciIsImNsaWVudCIsInRoZW1lcyIsImNvbmZpZyIsIk15QXBwIiwiQ29tcG9uZW50IiwicGFnZVByb3BzIiwiaXNPcGVuIiwiZm9udEZhbWlseSIsImJvcmRlclJhZGl1cyIsIm9wZW5lZCJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./pages/_app.js\\n\");\n\n/***/ }),\n\n/***/ \"./src/apollo/client.js\":\n/*!******************************!*\\\n  !*** ./src/apollo/client.js ***!\n  \\******************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"client\\\": () => (/* binding */ client)\\n/* harmony export */ });\\n/* harmony import */ var _apollo_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @apollo/client */ \\\"@apollo/client\\\");\\n/* harmony import */ var _apollo_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_apollo_client__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var _apollo_client_link_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @apollo/client/link/context */ \\\"@apollo/client/link/context\\\");\\n/* harmony import */ var _apollo_client_link_context__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_apollo_client_link_context__WEBPACK_IMPORTED_MODULE_1__);\\nfunction cov_df46kskeg() {\\n  var path = \\\"C:\\\\\\\\Users\\\\\\\\nathn\\\\\\\\Desktop\\\\\\\\final project\\\\\\\\admin-next-app\\\\\\\\src\\\\\\\\apollo\\\\\\\\client.js\\\";\\n  var hash = \\\"b0dba22b14523f3a81ab36017f53dbf35b246f11\\\";\\n  var global = new Function(\\\"return this\\\")();\\n  var gcv = \\\"__coverage__\\\";\\n  var coverageData = {\\n    path: \\\"C:\\\\\\\\Users\\\\\\\\nathn\\\\\\\\Desktop\\\\\\\\final project\\\\\\\\admin-next-app\\\\\\\\src\\\\\\\\apollo\\\\\\\\client.js\\\",\\n    statementMap: {\\n      \\\"0\\\": {\\n        start: {\\n          line: 5,\\n          column: 14\\n        },\\n        end: {\\n          line: 5,\\n          column: 33\\n        }\\n      },\\n      \\\"1\\\": {\\n        start: {\\n          line: 7,\\n          column: 17\\n        },\\n        end: {\\n          line: 10,\\n          column: 2\\n        }\\n      },\\n      \\\"2\\\": {\\n        start: {\\n          line: 12,\\n          column: 17\\n        },\\n        end: {\\n          line: 30,\\n          column: 2\\n        }\\n      },\\n      \\\"3\\\": {\\n        start: {\\n          line: 13,\\n          column: 18\\n        },\\n        end: {\\n          line: 13,\\n          column: 47\\n        }\\n      },\\n      \\\"4\\\": {\\n        start: {\\n          line: 23,\\n          column: 4\\n        },\\n        end: {\\n          line: 29,\\n          column: 6\\n        }\\n      },\\n      \\\"5\\\": {\\n        start: {\\n          line: 32,\\n          column: 22\\n        },\\n        end: {\\n          line: 35,\\n          column: 2\\n        }\\n      }\\n    },\\n    fnMap: {\\n      \\\"0\\\": {\\n        name: \\\"(anonymous_0)\\\",\\n        decl: {\\n          start: {\\n            line: 12,\\n            column: 28\\n          },\\n          end: {\\n            line: 12,\\n            column: 29\\n          }\\n        },\\n        loc: {\\n          start: {\\n            line: 12,\\n            column: 52\\n          },\\n          end: {\\n            line: 30,\\n            column: 1\\n          }\\n        },\\n        line: 12\\n      }\\n    },\\n    branchMap: {\\n      \\\"0\\\": {\\n        loc: {\\n          start: {\\n            line: 26,\\n            column: 27\\n          },\\n          end: {\\n            line: 26,\\n            column: 75\\n          }\\n        },\\n        type: \\\"cond-expr\\\",\\n        locations: [{\\n          start: {\\n            line: 26,\\n            column: 35\\n          },\\n          end: {\\n            line: 26,\\n            column: 70\\n          }\\n        }, {\\n          start: {\\n            line: 26,\\n            column: 73\\n          },\\n          end: {\\n            line: 26,\\n            column: 75\\n          }\\n        }],\\n        line: 26\\n      }\\n    },\\n    s: {\\n      \\\"0\\\": 0,\\n      \\\"1\\\": 0,\\n      \\\"2\\\": 0,\\n      \\\"3\\\": 0,\\n      \\\"4\\\": 0,\\n      \\\"5\\\": 0\\n    },\\n    f: {\\n      \\\"0\\\": 0\\n    },\\n    b: {\\n      \\\"0\\\": [0, 0]\\n    },\\n    _coverageSchema: \\\"1a1c01bbd47fc00a2c39e90264f33305004495a9\\\",\\n    hash: \\\"b0dba22b14523f3a81ab36017f53dbf35b246f11\\\"\\n  };\\n  var coverage = global[gcv] || (global[gcv] = {});\\n\\n  if (!coverage[path] || coverage[path].hash !== hash) {\\n    coverage[path] = coverageData;\\n  }\\n\\n  var actualCoverage = coverage[path];\\n  {\\n    // @ts-ignore\\n    cov_df46kskeg = function () {\\n      return actualCoverage;\\n    };\\n  }\\n  return actualCoverage;\\n}\\n\\ncov_df46kskeg();\\n\\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\\n\\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\\n\\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\\n\\n\\n // import fbConfig from \\\"../firebase/fb-config\\\";\\n\\nconst cache = (cov_df46kskeg().s[0]++, new _apollo_client__WEBPACK_IMPORTED_MODULE_0__.InMemoryCache());\\nconst httpLink = (cov_df46kskeg().s[1]++, (0,_apollo_client__WEBPACK_IMPORTED_MODULE_0__.createHttpLink)({\\n  // uri: 'https://finalproject34.herokuapp.com/graphql'\\n  uri: 'http://localhost:8000/graphql'\\n}));\\nconst authLink = (cov_df46kskeg().s[2]++, (0,_apollo_client_link_context__WEBPACK_IMPORTED_MODULE_1__.setContext)(async (_, {\\n  headers\\n}) => {\\n  cov_df46kskeg().f[0]++;\\n  const token = (cov_df46kskeg().s[3]++, localStorage.getItem('store')); // let phoneverification = \\\"\\\";\\n  //\\n  // const user = await fbConfig.auth().currentUser;\\n  // if (user) {\\n  //   await user.getIdToken().then((t) => {\\n  //     phoneverification = t;\\n  //   });\\n  // }\\n\\n  cov_df46kskeg().s[4]++;\\n  return {\\n    headers: _objectSpread(_objectSpread({}, headers), {}, {\\n      authorization: token ? (cov_df46kskeg().b[0][0]++, `Bearer ${JSON.parse(token).token}`) : (cov_df46kskeg().b[0][1]++, '') // phoneverification,\\n\\n    })\\n  };\\n}));\\nconst client = (cov_df46kskeg().s[5]++, new _apollo_client__WEBPACK_IMPORTED_MODULE_0__.ApolloClient({\\n  link: authLink.concat(httpLink),\\n  cache: cache\\n}));//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYXBvbGxvL2NsaWVudC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZVk7Ozs7Ozs7Ozs7Ozs7Ozs7QUFmWjtDQUVBOztBQUVBLE1BQU1JLEtBQUssNEJBQUcsSUFBSUYseURBQUosRUFBSCxDQUFYO0FBRUEsTUFBTUcsUUFBUSw0QkFBR0osOERBQWMsQ0FBQztBQUM1QjtBQUNBSyxFQUFBQSxHQUFHLEVBQUU7QUFGdUIsQ0FBRCxDQUFqQixDQUFkO0FBS0EsTUFBTUMsUUFBUSw0QkFBR0osdUVBQVUsQ0FBQyxPQUFPSyxDQUFQLEVBQVU7QUFBQ0MsRUFBQUE7QUFBRCxDQUFWLEtBQXdCO0FBQUE7QUFDaEQsUUFBTUMsS0FBSyw0QkFBR0MsWUFBWSxDQUFDQyxPQUFiLENBQXFCLE9BQXJCLENBQUgsQ0FBWCxDQURnRCxDQUVoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQVRnRDtBQVdoRCxTQUFPO0FBQ0hILElBQUFBLE9BQU8sa0NBQ0FBLE9BREE7QUFFSEksTUFBQUEsYUFBYSxFQUFFSCxLQUFLLCtCQUFJLFVBQVNJLElBQUksQ0FBQ0MsS0FBTCxDQUFXTCxLQUFYLEVBQWtCQSxLQUFNLEVBQXJDLGdDQUF5QyxFQUF6QyxDQUZqQixDQUdIOztBQUhHO0FBREosR0FBUDtBQU9ILENBbEIwQixDQUFiLENBQWQ7QUFvQk8sTUFBTU0sTUFBTSw0QkFBRyxJQUFJaEIsd0RBQUosQ0FBaUI7QUFDbkNpQixFQUFBQSxJQUFJLEVBQUVWLFFBQVEsQ0FBQ1csTUFBVCxDQUFnQmIsUUFBaEIsQ0FENkI7QUFFbkNELEVBQUFBLEtBQUssRUFBRUE7QUFGNEIsQ0FBakIsQ0FBSCxDQUFaIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWRtaW4tbmV4dC1hcHAvLi9zcmMvYXBvbGxvL2NsaWVudC5qcz81MTU0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QXBvbGxvQ2xpZW50LCBjcmVhdGVIdHRwTGluaywgSW5NZW1vcnlDYWNoZX0gZnJvbSAnQGFwb2xsby9jbGllbnQnO1xyXG5pbXBvcnQge3NldENvbnRleHR9IGZyb20gJ0BhcG9sbG8vY2xpZW50L2xpbmsvY29udGV4dCc7XHJcbi8vIGltcG9ydCBmYkNvbmZpZyBmcm9tIFwiLi4vZmlyZWJhc2UvZmItY29uZmlnXCI7XHJcblxyXG5jb25zdCBjYWNoZSA9IG5ldyBJbk1lbW9yeUNhY2hlKCk7XHJcblxyXG5jb25zdCBodHRwTGluayA9IGNyZWF0ZUh0dHBMaW5rKHtcclxuICAgIC8vIHVyaTogJ2h0dHBzOi8vZmluYWxwcm9qZWN0MzQuaGVyb2t1YXBwLmNvbS9ncmFwaHFsJ1xyXG4gICAgdXJpOiAnaHR0cDovL2xvY2FsaG9zdDo4MDAwL2dyYXBocWwnXHJcbn0pO1xyXG5cclxuY29uc3QgYXV0aExpbmsgPSBzZXRDb250ZXh0KGFzeW5jIChfLCB7aGVhZGVyc30pID0+IHtcclxuICAgIGNvbnN0IHRva2VuID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3N0b3JlJyk7XHJcbiAgICAvLyBsZXQgcGhvbmV2ZXJpZmljYXRpb24gPSBcIlwiO1xyXG4gICAgLy9cclxuICAgIC8vIGNvbnN0IHVzZXIgPSBhd2FpdCBmYkNvbmZpZy5hdXRoKCkuY3VycmVudFVzZXI7XHJcbiAgICAvLyBpZiAodXNlcikge1xyXG4gICAgLy8gICBhd2FpdCB1c2VyLmdldElkVG9rZW4oKS50aGVuKCh0KSA9PiB7XHJcbiAgICAvLyAgICAgcGhvbmV2ZXJpZmljYXRpb24gPSB0O1xyXG4gICAgLy8gICB9KTtcclxuICAgIC8vIH1cclxuXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgICAgLi4uaGVhZGVycyxcclxuICAgICAgICAgICAgYXV0aG9yaXphdGlvbjogdG9rZW4gPyBgQmVhcmVyICR7SlNPTi5wYXJzZSh0b2tlbikudG9rZW59YCA6ICcnXHJcbiAgICAgICAgICAgIC8vIHBob25ldmVyaWZpY2F0aW9uLFxyXG4gICAgICAgIH1cclxuICAgIH07XHJcbn0pO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNsaWVudCA9IG5ldyBBcG9sbG9DbGllbnQoe1xyXG4gICAgbGluazogYXV0aExpbmsuY29uY2F0KGh0dHBMaW5rKSxcclxuICAgIGNhY2hlOiBjYWNoZVxyXG59KTtcclxuIl0sIm5hbWVzIjpbIkFwb2xsb0NsaWVudCIsImNyZWF0ZUh0dHBMaW5rIiwiSW5NZW1vcnlDYWNoZSIsInNldENvbnRleHQiLCJjYWNoZSIsImh0dHBMaW5rIiwidXJpIiwiYXV0aExpbmsiLCJfIiwiaGVhZGVycyIsInRva2VuIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsImF1dGhvcml6YXRpb24iLCJKU09OIiwicGFyc2UiLCJjbGllbnQiLCJsaW5rIiwiY29uY2F0Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./src/apollo/client.js\\n\");\n\n/***/ }),\n\n/***/ \"./styles/themes/compStyleOverride.js\":\n/*!********************************************!*\\\n  !*** ./styles/themes/compStyleOverride.js ***!\n  \\********************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ componentStyleOverrides)\\n/* harmony export */ });\\nfunction cov_284rqmbwoy() {\\n  var path = \\\"C:\\\\\\\\Users\\\\\\\\nathn\\\\\\\\Desktop\\\\\\\\final project\\\\\\\\admin-next-app\\\\\\\\styles\\\\\\\\themes\\\\\\\\compStyleOverride.js\\\";\\n  var hash = \\\"881267d5ff95769f139cebdd1dbdf289ecd3eaa9\\\";\\n  var global = new Function(\\\"return this\\\")();\\n  var gcv = \\\"__coverage__\\\";\\n  var coverageData = {\\n    path: \\\"C:\\\\\\\\Users\\\\\\\\nathn\\\\\\\\Desktop\\\\\\\\final project\\\\\\\\admin-next-app\\\\\\\\styles\\\\\\\\themes\\\\\\\\compStyleOverride.js\\\",\\n    statementMap: {\\n      \\\"0\\\": {\\n        start: {\\n          line: 2,\\n          column: 18\\n        },\\n        end: {\\n          line: 2,\\n          column: 38\\n        }\\n      },\\n      \\\"1\\\": {\\n        start: {\\n          line: 3,\\n          column: 2\\n        },\\n        end: {\\n          line: 186,\\n          column: 4\\n        }\\n      }\\n    },\\n    fnMap: {\\n      \\\"0\\\": {\\n        name: \\\"componentStyleOverrides\\\",\\n        decl: {\\n          start: {\\n            line: 1,\\n            column: 24\\n          },\\n          end: {\\n            line: 1,\\n            column: 47\\n          }\\n        },\\n        loc: {\\n          start: {\\n            line: 1,\\n            column: 55\\n          },\\n          end: {\\n            line: 187,\\n            column: 1\\n          }\\n        },\\n        line: 1\\n      }\\n    },\\n    branchMap: {},\\n    s: {\\n      \\\"0\\\": 0,\\n      \\\"1\\\": 0\\n    },\\n    f: {\\n      \\\"0\\\": 0\\n    },\\n    b: {},\\n    _coverageSchema: \\\"1a1c01bbd47fc00a2c39e90264f33305004495a9\\\",\\n    hash: \\\"881267d5ff95769f139cebdd1dbdf289ecd3eaa9\\\"\\n  };\\n  var coverage = global[gcv] || (global[gcv] = {});\\n\\n  if (!coverage[path] || coverage[path].hash !== hash) {\\n    coverage[path] = coverageData;\\n  }\\n\\n  var actualCoverage = coverage[path];\\n  {\\n    // @ts-ignore\\n    cov_284rqmbwoy = function () {\\n      return actualCoverage;\\n    };\\n  }\\n  return actualCoverage;\\n}\\n\\ncov_284rqmbwoy();\\nfunction componentStyleOverrides(theme) {\\n  var _theme$colors, _theme$customization, _theme$colors2, _theme$customization2, _theme$colors3, _theme$colors4, _theme$customization3, _theme$customization4, _theme$colors5, _theme$colors6, _theme$colors7, _theme$colors8, _theme$colors9;\\n\\n  cov_284rqmbwoy().f[0]++;\\n  const bgColor = (cov_284rqmbwoy().s[0]++, (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.grey50);\\n  cov_284rqmbwoy().s[1]++;\\n  return {\\n    MuiButton: {\\n      styleOverrides: {\\n        root: {\\n          fontWeight: 500,\\n          borderRadius: '4px'\\n        }\\n      }\\n    },\\n    MuiPaper: {\\n      defaultProps: {\\n        elevation: 0\\n      },\\n      styleOverrides: {\\n        root: {\\n          backgroundImage: 'none'\\n        },\\n        rounded: {\\n          borderRadius: `${theme === null || theme === void 0 ? void 0 : (_theme$customization = theme.customization) === null || _theme$customization === void 0 ? void 0 : _theme$customization.borderRadius}px`\\n        }\\n      }\\n    },\\n    MuiCardHeader: {\\n      styleOverrides: {\\n        root: {\\n          color: (_theme$colors2 = theme.colors) === null || _theme$colors2 === void 0 ? void 0 : _theme$colors2.textDark,\\n          padding: '24px'\\n        },\\n        title: {\\n          fontSize: '1.125rem'\\n        }\\n      }\\n    },\\n    MuiCardContent: {\\n      styleOverrides: {\\n        root: {\\n          padding: '24px'\\n        }\\n      }\\n    },\\n    MuiCardActions: {\\n      styleOverrides: {\\n        root: {\\n          padding: '24px'\\n        }\\n      }\\n    },\\n    MuiListItemButton: {\\n      styleOverrides: {\\n        root: {\\n          color: theme.darkTextPrimary,\\n          paddingTop: '10px',\\n          paddingBottom: '10px',\\n          '&.Mui-selected': {\\n            color: theme.menuSelected,\\n            backgroundColor: theme.menuSelectedBack,\\n            '&:hover': {\\n              backgroundColor: theme.menuSelectedBack\\n            },\\n            '& .MuiListItemIcon-root': {\\n              color: theme.menuSelected\\n            }\\n          },\\n          '&:hover': {\\n            backgroundColor: theme.menuSelectedBack,\\n            color: theme.menuSelected,\\n            '& .MuiListItemIcon-root': {\\n              color: theme.menuSelected\\n            }\\n          }\\n        }\\n      }\\n    },\\n    MuiListItemIcon: {\\n      styleOverrides: {\\n        root: {\\n          color: theme.darkTextPrimary,\\n          minWidth: '36px'\\n        }\\n      }\\n    },\\n    MuiListItemText: {\\n      styleOverrides: {\\n        primary: {\\n          color: theme.textDark\\n        }\\n      }\\n    },\\n    MuiInputBase: {\\n      styleOverrides: {\\n        input: {\\n          color: theme.textDark,\\n          '&::placeholder': {\\n            color: theme.darkTextSecondary,\\n            fontSize: '0.875rem'\\n          }\\n        }\\n      }\\n    },\\n    MuiOutlinedInput: {\\n      styleOverrides: {\\n        root: {\\n          background: bgColor,\\n          borderRadius: `${theme === null || theme === void 0 ? void 0 : (_theme$customization2 = theme.customization) === null || _theme$customization2 === void 0 ? void 0 : _theme$customization2.borderRadius}px`,\\n          '& .MuiOutlinedInput-notchedOutline': {\\n            borderColor: (_theme$colors3 = theme.colors) === null || _theme$colors3 === void 0 ? void 0 : _theme$colors3.grey400\\n          },\\n          '&:hover $notchedOutline': {\\n            borderColor: (_theme$colors4 = theme.colors) === null || _theme$colors4 === void 0 ? void 0 : _theme$colors4.primaryLight\\n          },\\n          '&.MuiInputBase-multiline': {\\n            padding: 1\\n          }\\n        },\\n        input: {\\n          fontWeight: 500,\\n          background: bgColor,\\n          padding: '15.5px 14px',\\n          borderRadius: `${theme === null || theme === void 0 ? void 0 : (_theme$customization3 = theme.customization) === null || _theme$customization3 === void 0 ? void 0 : _theme$customization3.borderRadius}px`,\\n          '&.MuiInputBase-inputSizeSmall': {\\n            padding: '10px 14px',\\n            '&.MuiInputBase-inputAdornedStart': {\\n              paddingLeft: 0\\n            }\\n          }\\n        },\\n        inputAdornedStart: {\\n          paddingLeft: 4\\n        },\\n        notchedOutline: {\\n          borderRadius: `${theme === null || theme === void 0 ? void 0 : (_theme$customization4 = theme.customization) === null || _theme$customization4 === void 0 ? void 0 : _theme$customization4.borderRadius}px`\\n        }\\n      }\\n    },\\n    MuiSlider: {\\n      styleOverrides: {\\n        root: {\\n          '&.Mui-disabled': {\\n            color: (_theme$colors5 = theme.colors) === null || _theme$colors5 === void 0 ? void 0 : _theme$colors5.grey300\\n          }\\n        },\\n        mark: {\\n          backgroundColor: theme.paper,\\n          width: '4px'\\n        },\\n        valueLabel: {\\n          color: theme === null || theme === void 0 ? void 0 : (_theme$colors6 = theme.colors) === null || _theme$colors6 === void 0 ? void 0 : _theme$colors6.primaryLight\\n        }\\n      }\\n    },\\n    MuiDivider: {\\n      styleOverrides: {\\n        root: {\\n          borderColor: theme.divider,\\n          opacity: 1\\n        }\\n      }\\n    },\\n    MuiAvatar: {\\n      styleOverrides: {\\n        root: {\\n          color: (_theme$colors7 = theme.colors) === null || _theme$colors7 === void 0 ? void 0 : _theme$colors7.primaryDark,\\n          background: (_theme$colors8 = theme.colors) === null || _theme$colors8 === void 0 ? void 0 : _theme$colors8.primary200\\n        }\\n      }\\n    },\\n    MuiChip: {\\n      styleOverrides: {\\n        root: {\\n          '&.MuiChip-deletable .MuiChip-deleteIcon': {\\n            color: 'inherit'\\n          }\\n        }\\n      }\\n    },\\n    MuiTooltip: {\\n      styleOverrides: {\\n        tooltip: {\\n          color: theme.paper,\\n          background: (_theme$colors9 = theme.colors) === null || _theme$colors9 === void 0 ? void 0 : _theme$colors9.grey700\\n        }\\n      }\\n    }\\n  };\\n}//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./styles/themes/compStyleOverride.js\\n\");\n\n/***/ }),\n\n/***/ \"./styles/themes/index.js\":\n/*!********************************!*\\\n  !*** ./styles/themes/index.js ***!\n  \\********************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (__WEBPACK_DEFAULT_EXPORT__),\\n/* harmony export */   \\\"theme\\\": () => (/* binding */ theme)\\n/* harmony export */ });\\n/* harmony import */ var _mui_material_styles__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @mui/material/styles */ \\\"@mui/material/styles\\\");\\n/* harmony import */ var _mui_material_styles__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mui_material_styles__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var _scss_themes_vars_module_scss__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../scss/_themes-vars.module.scss */ \\\"./styles/scss/_themes-vars.module.scss\\\");\\n/* harmony import */ var _scss_themes_vars_module_scss__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_scss_themes_vars_module_scss__WEBPACK_IMPORTED_MODULE_4__);\\n/* harmony import */ var _compStyleOverride__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./compStyleOverride */ \\\"./styles/themes/compStyleOverride.js\\\");\\n/* harmony import */ var _palette__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./palette */ \\\"./styles/themes/palette.js\\\");\\n/* harmony import */ var _typography__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./typography */ \\\"./styles/themes/typography.js\\\");\\nfunction cov_1m8xn3x5im() {\\n  var path = \\\"C:\\\\\\\\Users\\\\\\\\nathn\\\\\\\\Desktop\\\\\\\\final project\\\\\\\\admin-next-app\\\\\\\\styles\\\\\\\\themes\\\\\\\\index.js\\\";\\n  var hash = \\\"0d23181803eebe0d7210da7beb76a01ae94d56b7\\\";\\n  var global = new Function(\\\"return this\\\")();\\n  var gcv = \\\"__coverage__\\\";\\n  var coverageData = {\\n    path: \\\"C:\\\\\\\\Users\\\\\\\\nathn\\\\\\\\Desktop\\\\\\\\final project\\\\\\\\admin-next-app\\\\\\\\styles\\\\\\\\themes\\\\\\\\index.js\\\",\\n    statementMap: {\\n      \\\"0\\\": {\\n        start: {\\n          line: 16,\\n          column: 21\\n        },\\n        end: {\\n          line: 53,\\n          column: 1\\n        }\\n      },\\n      \\\"1\\\": {\\n        start: {\\n          line: 17,\\n          column: 16\\n        },\\n        end: {\\n          line: 17,\\n          column: 22\\n        }\\n      },\\n      \\\"2\\\": {\\n        start: {\\n          line: 19,\\n          column: 22\\n        },\\n        end: {\\n          line: 32,\\n          column: 3\\n        }\\n      },\\n      \\\"3\\\": {\\n        start: {\\n          line: 34,\\n          column: 23\\n        },\\n        end: {\\n          line: 47,\\n          column: 3\\n        }\\n      },\\n      \\\"4\\\": {\\n        start: {\\n          line: 49,\\n          column: 17\\n        },\\n        end: {\\n          line: 49,\\n          column: 42\\n        }\\n      },\\n      \\\"5\\\": {\\n        start: {\\n          line: 50,\\n          column: 2\\n        },\\n        end: {\\n          line: 50,\\n          column: 59\\n        }\\n      },\\n      \\\"6\\\": {\\n        start: {\\n          line: 52,\\n          column: 2\\n        },\\n        end: {\\n          line: 52,\\n          column: 16\\n        }\\n      }\\n    },\\n    fnMap: {\\n      \\\"0\\\": {\\n        name: \\\"(anonymous_0)\\\",\\n        decl: {\\n          start: {\\n            line: 16,\\n            column: 21\\n          },\\n          end: {\\n            line: 16,\\n            column: 22\\n          }\\n        },\\n        loc: {\\n          start: {\\n            line: 16,\\n            column: 40\\n          },\\n          end: {\\n            line: 53,\\n            column: 1\\n          }\\n        },\\n        line: 16\\n      }\\n    },\\n    branchMap: {},\\n    s: {\\n      \\\"0\\\": 0,\\n      \\\"1\\\": 0,\\n      \\\"2\\\": 0,\\n      \\\"3\\\": 0,\\n      \\\"4\\\": 0,\\n      \\\"5\\\": 0,\\n      \\\"6\\\": 0\\n    },\\n    f: {\\n      \\\"0\\\": 0\\n    },\\n    b: {},\\n    _coverageSchema: \\\"1a1c01bbd47fc00a2c39e90264f33305004495a9\\\",\\n    hash: \\\"0d23181803eebe0d7210da7beb76a01ae94d56b7\\\"\\n  };\\n  var coverage = global[gcv] || (global[gcv] = {});\\n\\n  if (!coverage[path] || coverage[path].hash !== hash) {\\n    coverage[path] = coverageData;\\n  }\\n\\n  var actualCoverage = coverage[path];\\n  {\\n    // @ts-ignore\\n    cov_1m8xn3x5im = function () {\\n      return actualCoverage;\\n    };\\n  }\\n  return actualCoverage;\\n}\\n\\ncov_1m8xn3x5im();\\n // assets\\n\\n // project imports\\n\\n\\n\\n\\n/**\\r\\n * Represent theme style and structure as per Material-UI\\r\\n * @param {JsonObject} customization customization parameter object\\r\\n */\\n\\ncov_1m8xn3x5im().s[0]++;\\nconst theme = customization => {\\n  cov_1m8xn3x5im().f[0]++;\\n  const color = (cov_1m8xn3x5im().s[1]++, (_scss_themes_vars_module_scss__WEBPACK_IMPORTED_MODULE_4___default()));\\n  const themeOption = (cov_1m8xn3x5im().s[2]++, {\\n    colors: color,\\n    heading: color.grey900,\\n    paper: color.paper,\\n    backgroundDefault: color.paper,\\n    background: color.primaryLight,\\n    darkTextPrimary: color.grey700,\\n    darkTextSecondary: color.grey500,\\n    textDark: color.grey900,\\n    menuSelected: color.secondaryDark,\\n    menuSelectedBack: color.secondaryLight,\\n    divider: color.grey200,\\n    customization\\n  });\\n  const themeOptions = (cov_1m8xn3x5im().s[3]++, {\\n    direction: 'ltr',\\n    palette: (0,_palette__WEBPACK_IMPORTED_MODULE_2__[\\\"default\\\"])(themeOption),\\n    mixins: {\\n      toolbar: {\\n        minHeight: '48px',\\n        padding: '16px',\\n        '@media (min-width: 600px)': {\\n          minHeight: '48px'\\n        }\\n      }\\n    },\\n    typography: (0,_typography__WEBPACK_IMPORTED_MODULE_3__[\\\"default\\\"])(themeOption)\\n  });\\n  const themes = (cov_1m8xn3x5im().s[4]++, (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_0__.createTheme)(themeOptions));\\n  cov_1m8xn3x5im().s[5]++;\\n  themes.components = (0,_compStyleOverride__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"])(themeOption);\\n  cov_1m8xn3x5im().s[6]++;\\n  return themes;\\n};\\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (theme);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdHlsZXMvdGhlbWVzL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFlWTs7Ozs7Ozs7O0NBYlo7O0NBR0E7O0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7OztBQUVPLE1BQU1LLEtBQUssR0FBSUMsYUFBRCxJQUFtQjtBQUFBO0FBQ3RDLFFBQU1DLEtBQUssNkJBQUdOLHNFQUFILENBQVg7QUFFQSxRQUFNTyxXQUFXLDZCQUFHO0FBQ2xCUCxJQUFBQSxNQUFNLEVBQUVNLEtBRFU7QUFFbEJFLElBQUFBLE9BQU8sRUFBRUYsS0FBSyxDQUFDRyxPQUZHO0FBR2xCQyxJQUFBQSxLQUFLLEVBQUVKLEtBQUssQ0FBQ0ksS0FISztBQUlsQkMsSUFBQUEsaUJBQWlCLEVBQUVMLEtBQUssQ0FBQ0ksS0FKUDtBQUtsQkUsSUFBQUEsVUFBVSxFQUFFTixLQUFLLENBQUNPLFlBTEE7QUFNbEJDLElBQUFBLGVBQWUsRUFBRVIsS0FBSyxDQUFDUyxPQU5MO0FBT2xCQyxJQUFBQSxpQkFBaUIsRUFBRVYsS0FBSyxDQUFDVyxPQVBQO0FBUWxCQyxJQUFBQSxRQUFRLEVBQUVaLEtBQUssQ0FBQ0csT0FSRTtBQVNsQlUsSUFBQUEsWUFBWSxFQUFFYixLQUFLLENBQUNjLGFBVEY7QUFVbEJDLElBQUFBLGdCQUFnQixFQUFFZixLQUFLLENBQUNnQixjQVZOO0FBV2xCQyxJQUFBQSxPQUFPLEVBQUVqQixLQUFLLENBQUNrQixPQVhHO0FBWWxCbkIsSUFBQUE7QUFaa0IsR0FBSCxDQUFqQjtBQWVBLFFBQU1vQixZQUFZLDZCQUFHO0FBQ25CQyxJQUFBQSxTQUFTLEVBQUUsS0FEUTtBQUVuQkMsSUFBQUEsT0FBTyxFQUFFekIsb0RBQVksQ0FBQ0ssV0FBRCxDQUZGO0FBR25CcUIsSUFBQUEsTUFBTSxFQUFFO0FBQ05DLE1BQUFBLE9BQU8sRUFBRTtBQUNQQyxRQUFBQSxTQUFTLEVBQUUsTUFESjtBQUVQQyxRQUFBQSxPQUFPLEVBQUUsTUFGRjtBQUdQLHFDQUE2QjtBQUMzQkQsVUFBQUEsU0FBUyxFQUFFO0FBRGdCO0FBSHRCO0FBREgsS0FIVztBQVluQkUsSUFBQUEsVUFBVSxFQUFFN0IsdURBQWUsQ0FBQ0ksV0FBRDtBQVpSLEdBQUgsQ0FBbEI7QUFlQSxRQUFNMEIsTUFBTSw2QkFBR2xDLGlFQUFXLENBQUMwQixZQUFELENBQWQsQ0FBWjtBQWpDc0M7QUFrQ3RDUSxFQUFBQSxNQUFNLENBQUNDLFVBQVAsR0FBb0JqQyw4REFBdUIsQ0FBQ00sV0FBRCxDQUEzQztBQWxDc0M7QUFvQ3RDLFNBQU8wQixNQUFQO0FBQ0QsQ0FyQ007QUF1Q1AsaUVBQWU3QixLQUFmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWRtaW4tbmV4dC1hcHAvLi9zdHlsZXMvdGhlbWVzL2luZGV4LmpzPzNmNWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtjcmVhdGVUaGVtZX0gZnJvbSAnQG11aS9tYXRlcmlhbC9zdHlsZXMnO1xyXG5cclxuLy8gYXNzZXRzXHJcbmltcG9ydCBjb2xvcnMgZnJvbSAnLi4vc2Nzcy9fdGhlbWVzLXZhcnMubW9kdWxlLnNjc3MnO1xyXG5cclxuLy8gcHJvamVjdCBpbXBvcnRzXHJcbmltcG9ydCBjb21wb25lbnRTdHlsZU92ZXJyaWRlcyBmcm9tICcuL2NvbXBTdHlsZU92ZXJyaWRlJztcclxuaW1wb3J0IHRoZW1lUGFsZXR0ZSBmcm9tICcuL3BhbGV0dGUnO1xyXG5pbXBvcnQgdGhlbWVUeXBvZ3JhcGh5IGZyb20gJy4vdHlwb2dyYXBoeSc7XHJcblxyXG4vKipcclxuICogUmVwcmVzZW50IHRoZW1lIHN0eWxlIGFuZCBzdHJ1Y3R1cmUgYXMgcGVyIE1hdGVyaWFsLVVJXHJcbiAqIEBwYXJhbSB7SnNvbk9iamVjdH0gY3VzdG9taXphdGlvbiBjdXN0b21pemF0aW9uIHBhcmFtZXRlciBvYmplY3RcclxuICovXHJcblxyXG5leHBvcnQgY29uc3QgdGhlbWUgPSAoY3VzdG9taXphdGlvbikgPT4ge1xyXG4gIGNvbnN0IGNvbG9yID0gY29sb3JzO1xyXG5cclxuICBjb25zdCB0aGVtZU9wdGlvbiA9IHtcclxuICAgIGNvbG9yczogY29sb3IsXHJcbiAgICBoZWFkaW5nOiBjb2xvci5ncmV5OTAwLFxyXG4gICAgcGFwZXI6IGNvbG9yLnBhcGVyLFxyXG4gICAgYmFja2dyb3VuZERlZmF1bHQ6IGNvbG9yLnBhcGVyLFxyXG4gICAgYmFja2dyb3VuZDogY29sb3IucHJpbWFyeUxpZ2h0LFxyXG4gICAgZGFya1RleHRQcmltYXJ5OiBjb2xvci5ncmV5NzAwLFxyXG4gICAgZGFya1RleHRTZWNvbmRhcnk6IGNvbG9yLmdyZXk1MDAsXHJcbiAgICB0ZXh0RGFyazogY29sb3IuZ3JleTkwMCxcclxuICAgIG1lbnVTZWxlY3RlZDogY29sb3Iuc2Vjb25kYXJ5RGFyayxcclxuICAgIG1lbnVTZWxlY3RlZEJhY2s6IGNvbG9yLnNlY29uZGFyeUxpZ2h0LFxyXG4gICAgZGl2aWRlcjogY29sb3IuZ3JleTIwMCxcclxuICAgIGN1c3RvbWl6YXRpb25cclxuICB9O1xyXG5cclxuICBjb25zdCB0aGVtZU9wdGlvbnMgPSB7XHJcbiAgICBkaXJlY3Rpb246ICdsdHInLFxyXG4gICAgcGFsZXR0ZTogdGhlbWVQYWxldHRlKHRoZW1lT3B0aW9uKSxcclxuICAgIG1peGluczoge1xyXG4gICAgICB0b29sYmFyOiB7XHJcbiAgICAgICAgbWluSGVpZ2h0OiAnNDhweCcsXHJcbiAgICAgICAgcGFkZGluZzogJzE2cHgnLFxyXG4gICAgICAgICdAbWVkaWEgKG1pbi13aWR0aDogNjAwcHgpJzoge1xyXG4gICAgICAgICAgbWluSGVpZ2h0OiAnNDhweCdcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0sXHJcbiAgICB0eXBvZ3JhcGh5OiB0aGVtZVR5cG9ncmFwaHkodGhlbWVPcHRpb24pXHJcbiAgfTtcclxuXHJcbiAgY29uc3QgdGhlbWVzID0gY3JlYXRlVGhlbWUodGhlbWVPcHRpb25zKTtcclxuICB0aGVtZXMuY29tcG9uZW50cyA9IGNvbXBvbmVudFN0eWxlT3ZlcnJpZGVzKHRoZW1lT3B0aW9uKTtcclxuXHJcbiAgcmV0dXJuIHRoZW1lcztcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRoZW1lO1xyXG4iXSwibmFtZXMiOlsiY3JlYXRlVGhlbWUiLCJjb2xvcnMiLCJjb21wb25lbnRTdHlsZU92ZXJyaWRlcyIsInRoZW1lUGFsZXR0ZSIsInRoZW1lVHlwb2dyYXBoeSIsInRoZW1lIiwiY3VzdG9taXphdGlvbiIsImNvbG9yIiwidGhlbWVPcHRpb24iLCJoZWFkaW5nIiwiZ3JleTkwMCIsInBhcGVyIiwiYmFja2dyb3VuZERlZmF1bHQiLCJiYWNrZ3JvdW5kIiwicHJpbWFyeUxpZ2h0IiwiZGFya1RleHRQcmltYXJ5IiwiZ3JleTcwMCIsImRhcmtUZXh0U2Vjb25kYXJ5IiwiZ3JleTUwMCIsInRleHREYXJrIiwibWVudVNlbGVjdGVkIiwic2Vjb25kYXJ5RGFyayIsIm1lbnVTZWxlY3RlZEJhY2siLCJzZWNvbmRhcnlMaWdodCIsImRpdmlkZXIiLCJncmV5MjAwIiwidGhlbWVPcHRpb25zIiwiZGlyZWN0aW9uIiwicGFsZXR0ZSIsIm1peGlucyIsInRvb2xiYXIiLCJtaW5IZWlnaHQiLCJwYWRkaW5nIiwidHlwb2dyYXBoeSIsInRoZW1lcyIsImNvbXBvbmVudHMiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./styles/themes/index.js\\n\");\n\n/***/ }),\n\n/***/ \"./styles/themes/palette.js\":\n/*!**********************************!*\\\n  !*** ./styles/themes/palette.js ***!\n  \\**********************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ themePalette)\\n/* harmony export */ });\\nfunction cov_68lzzf8ks() {\\n  var path = \\\"C:\\\\\\\\Users\\\\\\\\nathn\\\\\\\\Desktop\\\\\\\\final project\\\\\\\\admin-next-app\\\\\\\\styles\\\\\\\\themes\\\\\\\\palette.js\\\";\\n  var hash = \\\"e48784bdcb77daca9e91e01f87ceb5f7ed5e0839\\\";\\n  var global = new Function(\\\"return this\\\")();\\n  var gcv = \\\"__coverage__\\\";\\n  var coverageData = {\\n    path: \\\"C:\\\\\\\\Users\\\\\\\\nathn\\\\\\\\Desktop\\\\\\\\final project\\\\\\\\admin-next-app\\\\\\\\styles\\\\\\\\themes\\\\\\\\palette.js\\\",\\n    statementMap: {\\n      \\\"0\\\": {\\n        start: {\\n          line: 7,\\n          column: 2\\n        },\\n        end: {\\n          line: 72,\\n          column: 4\\n        }\\n      }\\n    },\\n    fnMap: {\\n      \\\"0\\\": {\\n        name: \\\"themePalette\\\",\\n        decl: {\\n          start: {\\n            line: 6,\\n            column: 24\\n          },\\n          end: {\\n            line: 6,\\n            column: 36\\n          }\\n        },\\n        loc: {\\n          start: {\\n            line: 6,\\n            column: 44\\n          },\\n          end: {\\n            line: 73,\\n            column: 1\\n          }\\n        },\\n        line: 6\\n      }\\n    },\\n    branchMap: {},\\n    s: {\\n      \\\"0\\\": 0\\n    },\\n    f: {\\n      \\\"0\\\": 0\\n    },\\n    b: {},\\n    _coverageSchema: \\\"1a1c01bbd47fc00a2c39e90264f33305004495a9\\\",\\n    hash: \\\"e48784bdcb77daca9e91e01f87ceb5f7ed5e0839\\\"\\n  };\\n  var coverage = global[gcv] || (global[gcv] = {});\\n\\n  if (!coverage[path] || coverage[path].hash !== hash) {\\n    coverage[path] = coverageData;\\n  }\\n\\n  var actualCoverage = coverage[path];\\n  {\\n    // @ts-ignore\\n    cov_68lzzf8ks = function () {\\n      return actualCoverage;\\n    };\\n  }\\n  return actualCoverage;\\n}\\n\\ncov_68lzzf8ks();\\n\\n/**\\r\\n * Color intention that you want to used in your theme\\r\\n * @param {JsonObject} theme Theme customization object\\r\\n */\\nfunction themePalette(theme) {\\n  var _theme$customization, _theme$colors, _theme$colors2, _theme$colors3, _theme$colors4, _theme$colors5, _theme$colors6, _theme$colors7, _theme$colors8, _theme$colors9, _theme$colors10, _theme$colors11, _theme$colors12, _theme$colors13, _theme$colors14, _theme$colors15, _theme$colors16, _theme$colors17, _theme$colors18, _theme$colors19, _theme$colors20, _theme$colors21, _theme$colors22, _theme$colors23, _theme$colors24, _theme$colors25, _theme$colors26, _theme$colors27, _theme$colors28, _theme$colors29, _theme$colors30, _theme$colors31, _theme$colors32;\\n\\n  cov_68lzzf8ks().f[0]++;\\n  cov_68lzzf8ks().s[0]++;\\n  return {\\n    mode: theme === null || theme === void 0 ? void 0 : (_theme$customization = theme.customization) === null || _theme$customization === void 0 ? void 0 : _theme$customization.navType,\\n    common: {\\n      black: (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.darkPaper\\n    },\\n    primary: {\\n      light: (_theme$colors2 = theme.colors) === null || _theme$colors2 === void 0 ? void 0 : _theme$colors2.primaryLight,\\n      main: (_theme$colors3 = theme.colors) === null || _theme$colors3 === void 0 ? void 0 : _theme$colors3.primaryMain,\\n      dark: (_theme$colors4 = theme.colors) === null || _theme$colors4 === void 0 ? void 0 : _theme$colors4.primaryDark,\\n      200: (_theme$colors5 = theme.colors) === null || _theme$colors5 === void 0 ? void 0 : _theme$colors5.primary200,\\n      800: (_theme$colors6 = theme.colors) === null || _theme$colors6 === void 0 ? void 0 : _theme$colors6.primary800\\n    },\\n    secondary: {\\n      light: (_theme$colors7 = theme.colors) === null || _theme$colors7 === void 0 ? void 0 : _theme$colors7.secondaryLight,\\n      main: (_theme$colors8 = theme.colors) === null || _theme$colors8 === void 0 ? void 0 : _theme$colors8.secondaryMain,\\n      dark: (_theme$colors9 = theme.colors) === null || _theme$colors9 === void 0 ? void 0 : _theme$colors9.secondaryDark,\\n      200: (_theme$colors10 = theme.colors) === null || _theme$colors10 === void 0 ? void 0 : _theme$colors10.secondary200,\\n      800: (_theme$colors11 = theme.colors) === null || _theme$colors11 === void 0 ? void 0 : _theme$colors11.secondary800\\n    },\\n    error: {\\n      light: (_theme$colors12 = theme.colors) === null || _theme$colors12 === void 0 ? void 0 : _theme$colors12.errorLight,\\n      main: (_theme$colors13 = theme.colors) === null || _theme$colors13 === void 0 ? void 0 : _theme$colors13.errorMain,\\n      dark: (_theme$colors14 = theme.colors) === null || _theme$colors14 === void 0 ? void 0 : _theme$colors14.errorDark\\n    },\\n    orange: {\\n      light: (_theme$colors15 = theme.colors) === null || _theme$colors15 === void 0 ? void 0 : _theme$colors15.orangeLight,\\n      main: (_theme$colors16 = theme.colors) === null || _theme$colors16 === void 0 ? void 0 : _theme$colors16.orangeMain,\\n      dark: (_theme$colors17 = theme.colors) === null || _theme$colors17 === void 0 ? void 0 : _theme$colors17.orangeDark\\n    },\\n    warning: {\\n      light: (_theme$colors18 = theme.colors) === null || _theme$colors18 === void 0 ? void 0 : _theme$colors18.warningLight,\\n      main: (_theme$colors19 = theme.colors) === null || _theme$colors19 === void 0 ? void 0 : _theme$colors19.warningMain,\\n      dark: (_theme$colors20 = theme.colors) === null || _theme$colors20 === void 0 ? void 0 : _theme$colors20.warningDark\\n    },\\n    success: {\\n      light: (_theme$colors21 = theme.colors) === null || _theme$colors21 === void 0 ? void 0 : _theme$colors21.successLight,\\n      200: (_theme$colors22 = theme.colors) === null || _theme$colors22 === void 0 ? void 0 : _theme$colors22.success200,\\n      main: (_theme$colors23 = theme.colors) === null || _theme$colors23 === void 0 ? void 0 : _theme$colors23.successMain,\\n      dark: (_theme$colors24 = theme.colors) === null || _theme$colors24 === void 0 ? void 0 : _theme$colors24.successDark\\n    },\\n    grey: {\\n      50: (_theme$colors25 = theme.colors) === null || _theme$colors25 === void 0 ? void 0 : _theme$colors25.grey50,\\n      100: (_theme$colors26 = theme.colors) === null || _theme$colors26 === void 0 ? void 0 : _theme$colors26.grey100,\\n      500: theme.darkTextSecondary,\\n      600: theme.heading,\\n      700: theme.darkTextPrimary,\\n      900: theme.textDark\\n    },\\n    dark: {\\n      light: (_theme$colors27 = theme.colors) === null || _theme$colors27 === void 0 ? void 0 : _theme$colors27.darkTextPrimary,\\n      main: (_theme$colors28 = theme.colors) === null || _theme$colors28 === void 0 ? void 0 : _theme$colors28.darkLevel1,\\n      dark: (_theme$colors29 = theme.colors) === null || _theme$colors29 === void 0 ? void 0 : _theme$colors29.darkLevel2,\\n      800: (_theme$colors30 = theme.colors) === null || _theme$colors30 === void 0 ? void 0 : _theme$colors30.darkBackground,\\n      900: (_theme$colors31 = theme.colors) === null || _theme$colors31 === void 0 ? void 0 : _theme$colors31.darkPaper\\n    },\\n    text: {\\n      primary: theme.darkTextPrimary,\\n      secondary: theme.darkTextSecondary,\\n      dark: theme.textDark,\\n      hint: (_theme$colors32 = theme.colors) === null || _theme$colors32 === void 0 ? void 0 : _theme$colors32.grey100\\n    },\\n    background: {\\n      paper: theme.paper,\\n      default: theme.backgroundDefault\\n    }\\n  };\\n}//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QU8sRUFBRXRELEtBQUssQ0FBQ3VEO0FBRkw7QUE3RFAsR0FBUDtBQWtFRCIsInNvdXJjZXMiOlsid2VicGFjazovL2FkbWluLW5leHQtYXBwLy4vc3R5bGVzL3RoZW1lcy9wYWxldHRlLmpzPzhlMDEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENvbG9yIGludGVudGlvbiB0aGF0IHlvdSB3YW50IHRvIHVzZWQgaW4geW91ciB0aGVtZVxyXG4gKiBAcGFyYW0ge0pzb25PYmplY3R9IHRoZW1lIFRoZW1lIGN1c3RvbWl6YXRpb24gb2JqZWN0XHJcbiAqL1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdGhlbWVQYWxldHRlKHRoZW1lKSB7XHJcbiAgcmV0dXJuIHtcclxuICAgIG1vZGU6IHRoZW1lPy5jdXN0b21pemF0aW9uPy5uYXZUeXBlLFxyXG4gICAgY29tbW9uOiB7XHJcbiAgICAgIGJsYWNrOiB0aGVtZS5jb2xvcnM/LmRhcmtQYXBlclxyXG4gICAgfSxcclxuICAgIHByaW1hcnk6IHtcclxuICAgICAgbGlnaHQ6IHRoZW1lLmNvbG9ycz8ucHJpbWFyeUxpZ2h0LFxyXG4gICAgICBtYWluOiB0aGVtZS5jb2xvcnM/LnByaW1hcnlNYWluLFxyXG4gICAgICBkYXJrOiB0aGVtZS5jb2xvcnM/LnByaW1hcnlEYXJrLFxyXG4gICAgICAyMDA6IHRoZW1lLmNvbG9ycz8ucHJpbWFyeTIwMCxcclxuICAgICAgODAwOiB0aGVtZS5jb2xvcnM/LnByaW1hcnk4MDBcclxuICAgIH0sXHJcbiAgICBzZWNvbmRhcnk6IHtcclxuICAgICAgbGlnaHQ6IHRoZW1lLmNvbG9ycz8uc2Vjb25kYXJ5TGlnaHQsXHJcbiAgICAgIG1haW46IHRoZW1lLmNvbG9ycz8uc2Vjb25kYXJ5TWFpbixcclxuICAgICAgZGFyazogdGhlbWUuY29sb3JzPy5zZWNvbmRhcnlEYXJrLFxyXG4gICAgICAyMDA6IHRoZW1lLmNvbG9ycz8uc2Vjb25kYXJ5MjAwLFxyXG4gICAgICA4MDA6IHRoZW1lLmNvbG9ycz8uc2Vjb25kYXJ5ODAwXHJcbiAgICB9LFxyXG4gICAgZXJyb3I6IHtcclxuICAgICAgbGlnaHQ6IHRoZW1lLmNvbG9ycz8uZXJyb3JMaWdodCxcclxuICAgICAgbWFpbjogdGhlbWUuY29sb3JzPy5lcnJvck1haW4sXHJcbiAgICAgIGRhcms6IHRoZW1lLmNvbG9ycz8uZXJyb3JEYXJrXHJcbiAgICB9LFxyXG4gICAgb3JhbmdlOiB7XHJcbiAgICAgIGxpZ2h0OiB0aGVtZS5jb2xvcnM/Lm9yYW5nZUxpZ2h0LFxyXG4gICAgICBtYWluOiB0aGVtZS5jb2xvcnM/Lm9yYW5nZU1haW4sXHJcbiAgICAgIGRhcms6IHRoZW1lLmNvbG9ycz8ub3JhbmdlRGFya1xyXG4gICAgfSxcclxuICAgIHdhcm5pbmc6IHtcclxuICAgICAgbGlnaHQ6IHRoZW1lLmNvbG9ycz8ud2FybmluZ0xpZ2h0LFxyXG4gICAgICBtYWluOiB0aGVtZS5jb2xvcnM/Lndhcm5pbmdNYWluLFxyXG4gICAgICBkYXJrOiB0aGVtZS5jb2xvcnM/Lndhcm5pbmdEYXJrXHJcbiAgICB9LFxyXG4gICAgc3VjY2Vzczoge1xyXG4gICAgICBsaWdodDogdGhlbWUuY29sb3JzPy5zdWNjZXNzTGlnaHQsXHJcbiAgICAgIDIwMDogdGhlbWUuY29sb3JzPy5zdWNjZXNzMjAwLFxyXG4gICAgICBtYWluOiB0aGVtZS5jb2xvcnM/LnN1Y2Nlc3NNYWluLFxyXG4gICAgICBkYXJrOiB0aGVtZS5jb2xvcnM/LnN1Y2Nlc3NEYXJrXHJcbiAgICB9LFxyXG4gICAgZ3JleToge1xyXG4gICAgICA1MDogdGhlbWUuY29sb3JzPy5ncmV5NTAsXHJcbiAgICAgIDEwMDogdGhlbWUuY29sb3JzPy5ncmV5MTAwLFxyXG4gICAgICA1MDA6IHRoZW1lLmRhcmtUZXh0U2Vjb25kYXJ5LFxyXG4gICAgICA2MDA6IHRoZW1lLmhlYWRpbmcsXHJcbiAgICAgIDcwMDogdGhlbWUuZGFya1RleHRQcmltYXJ5LFxyXG4gICAgICA5MDA6IHRoZW1lLnRleHREYXJrXHJcbiAgICB9LFxyXG4gICAgZGFyazoge1xyXG4gICAgICBsaWdodDogdGhlbWUuY29sb3JzPy5kYXJrVGV4dFByaW1hcnksXHJcbiAgICAgIG1haW46IHRoZW1lLmNvbG9ycz8uZGFya0xldmVsMSxcclxuICAgICAgZGFyazogdGhlbWUuY29sb3JzPy5kYXJrTGV2ZWwyLFxyXG4gICAgICA4MDA6IHRoZW1lLmNvbG9ycz8uZGFya0JhY2tncm91bmQsXHJcbiAgICAgIDkwMDogdGhlbWUuY29sb3JzPy5kYXJrUGFwZXJcclxuICAgIH0sXHJcbiAgICB0ZXh0OiB7XHJcbiAgICAgIHByaW1hcnk6IHRoZW1lLmRhcmtUZXh0UHJpbWFyeSxcclxuICAgICAgc2Vjb25kYXJ5OiB0aGVtZS5kYXJrVGV4dFNlY29uZGFyeSxcclxuICAgICAgZGFyazogdGhlbWUudGV4dERhcmssXHJcbiAgICAgIGhpbnQ6IHRoZW1lLmNvbG9ycz8uZ3JleTEwMFxyXG4gICAgfSxcclxuICAgIGJhY2tncm91bmQ6IHtcclxuICAgICAgcGFwZXI6IHRoZW1lLnBhcGVyLFxyXG4gICAgICBkZWZhdWx0OiB0aGVtZS5iYWNrZ3JvdW5kRGVmYXVsdFxyXG4gICAgfVxyXG4gIH07XHJcbn1cclxuIl0sIm5hbWVzIjpbInRoZW1lUGFsZXR0ZSIsInRoZW1lIiwibW9kZSIsImN1c3RvbWl6YXRpb24iLCJuYXZUeXBlIiwiY29tbW9uIiwiYmxhY2siLCJjb2xvcnMiLCJkYXJrUGFwZXIiLCJwcmltYXJ5IiwibGlnaHQiLCJwcmltYXJ5TGlnaHQiLCJtYWluIiwicHJpbWFyeU1haW4iLCJkYXJrIiwicHJpbWFyeURhcmsiLCJwcmltYXJ5MjAwIiwicHJpbWFyeTgwMCIsInNlY29uZGFyeSIsInNlY29uZGFyeUxpZ2h0Iiwic2Vjb25kYXJ5TWFpbiIsInNlY29uZGFyeURhcmsiLCJzZWNvbmRhcnkyMDAiLCJzZWNvbmRhcnk4MDAiLCJlcnJvciIsImVycm9yTGlnaHQiLCJlcnJvck1haW4iLCJlcnJvckRhcmsiLCJvcmFuZ2UiLCJvcmFuZ2VMaWdodCIsIm9yYW5nZU1haW4iLCJvcmFuZ2VEYXJrIiwid2FybmluZyIsIndhcm5pbmdMaWdodCIsIndhcm5pbmdNYWluIiwid2FybmluZ0RhcmsiLCJzdWNjZXNzIiwic3VjY2Vzc0xpZ2h0Iiwic3VjY2VzczIwMCIsInN1Y2Nlc3NNYWluIiwic3VjY2Vzc0RhcmsiLCJncmV5IiwiZ3JleTUwIiwiZ3JleTEwMCIsImRhcmtUZXh0U2Vjb25kYXJ5IiwiaGVhZGluZyIsImRhcmtUZXh0UHJpbWFyeSIsInRleHREYXJrIiwiZGFya0xldmVsMSIsImRhcmtMZXZlbDIiLCJkYXJrQmFja2dyb3VuZCIsInRleHQiLCJoaW50IiwiYmFja2dyb3VuZCIsInBhcGVyIiwiZGVmYXVsdCIsImJhY2tncm91bmREZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./styles/themes/palette.js\\n\");\n\n/***/ }),\n\n/***/ \"./styles/themes/typography.js\":\n/*!*************************************!*\\\n  !*** ./styles/themes/typography.js ***!\n  \\*************************************/\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\neval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\n/* harmony export */   \\\"default\\\": () => (/* binding */ themeTypography)\\n/* harmony export */ });\\nfunction cov_1ma2672d0l() {\\n  var path = \\\"C:\\\\\\\\Users\\\\\\\\nathn\\\\\\\\Desktop\\\\\\\\final project\\\\\\\\admin-next-app\\\\\\\\styles\\\\\\\\themes\\\\\\\\typography.js\\\";\\n  var hash = \\\"37182d6c42b41b17d0bfae5c4d2c40afb202a870\\\";\\n  var global = new Function(\\\"return this\\\")();\\n  var gcv = \\\"__coverage__\\\";\\n  var coverageData = {\\n    path: \\\"C:\\\\\\\\Users\\\\\\\\nathn\\\\\\\\Desktop\\\\\\\\final project\\\\\\\\admin-next-app\\\\\\\\styles\\\\\\\\themes\\\\\\\\typography.js\\\",\\n    statementMap: {\\n      \\\"0\\\": {\\n        start: {\\n          line: 7,\\n          column: 2\\n        },\\n        end: {\\n          line: 132,\\n          column: 4\\n        }\\n      }\\n    },\\n    fnMap: {\\n      \\\"0\\\": {\\n        name: \\\"themeTypography\\\",\\n        decl: {\\n          start: {\\n            line: 6,\\n            column: 24\\n          },\\n          end: {\\n            line: 6,\\n            column: 39\\n          }\\n        },\\n        loc: {\\n          start: {\\n            line: 6,\\n            column: 47\\n          },\\n          end: {\\n            line: 133,\\n            column: 1\\n          }\\n        },\\n        line: 6\\n      }\\n    },\\n    branchMap: {},\\n    s: {\\n      \\\"0\\\": 0\\n    },\\n    f: {\\n      \\\"0\\\": 0\\n    },\\n    b: {},\\n    _coverageSchema: \\\"1a1c01bbd47fc00a2c39e90264f33305004495a9\\\",\\n    hash: \\\"37182d6c42b41b17d0bfae5c4d2c40afb202a870\\\"\\n  };\\n  var coverage = global[gcv] || (global[gcv] = {});\\n\\n  if (!coverage[path] || coverage[path].hash !== hash) {\\n    coverage[path] = coverageData;\\n  }\\n\\n  var actualCoverage = coverage[path];\\n  {\\n    // @ts-ignore\\n    cov_1ma2672d0l = function () {\\n      return actualCoverage;\\n    };\\n  }\\n  return actualCoverage;\\n}\\n\\ncov_1ma2672d0l();\\n\\n/**\\r\\n * Typography used in theme\\r\\n * @param {JsonObject} theme theme customization object\\r\\n */\\nfunction themeTypography(theme) {\\n  var _theme$customization, _theme$customization2;\\n\\n  cov_1ma2672d0l().f[0]++;\\n  cov_1ma2672d0l().s[0]++;\\n  return {\\n    fontFamily: theme === null || theme === void 0 ? void 0 : (_theme$customization = theme.customization) === null || _theme$customization === void 0 ? void 0 : _theme$customization.fontFamily,\\n    h6: {\\n      fontWeight: 500,\\n      color: theme.heading,\\n      fontSize: '0.75rem'\\n    },\\n    h5: {\\n      fontSize: '0.875rem',\\n      color: theme.heading,\\n      fontWeight: 500\\n    },\\n    h4: {\\n      fontSize: '1rem',\\n      color: theme.heading,\\n      fontWeight: 600\\n    },\\n    h3: {\\n      fontSize: '1.25rem',\\n      color: theme.heading,\\n      fontWeight: 600\\n    },\\n    h2: {\\n      fontSize: '1.5rem',\\n      color: theme.heading,\\n      fontWeight: 700\\n    },\\n    h1: {\\n      fontSize: '2.125rem',\\n      color: theme.heading,\\n      fontWeight: 700\\n    },\\n    subtitle1: {\\n      fontSize: '0.875rem',\\n      fontWeight: 500,\\n      color: theme.textDark\\n    },\\n    subtitle2: {\\n      fontSize: '0.75rem',\\n      fontWeight: 400,\\n      color: theme.darkTextSecondary\\n    },\\n    caption: {\\n      fontSize: '0.75rem',\\n      color: theme.darkTextSecondary,\\n      fontWeight: 400\\n    },\\n    body1: {\\n      fontSize: '0.875rem',\\n      fontWeight: 400,\\n      lineHeight: '1.334em'\\n    },\\n    body2: {\\n      letterSpacing: '0em',\\n      fontWeight: 400,\\n      lineHeight: '1.5em',\\n      color: theme.darkTextPrimary\\n    },\\n    button: {\\n      textTransform: 'capitalize'\\n    },\\n    customInput: {\\n      marginTop: 1,\\n      marginBottom: 1,\\n      '& > label': {\\n        top: 23,\\n        left: 0,\\n        color: theme.grey500,\\n        '&[data-shrink=\\\"false\\\"]': {\\n          top: 5\\n        }\\n      },\\n      '& > div > input': {\\n        padding: '30.5px 14px 11.5px !important'\\n      },\\n      '& legend': {\\n        display: 'none'\\n      },\\n      '& fieldset': {\\n        top: 0\\n      }\\n    },\\n    mainContent: {\\n      backgroundColor: theme.background,\\n      width: '100%',\\n      minHeight: 'calc(100vh - 88px)',\\n      flexGrow: 1,\\n      padding: '20px',\\n      marginTop: '88px',\\n      marginRight: '20px',\\n      borderRadius: `${theme === null || theme === void 0 ? void 0 : (_theme$customization2 = theme.customization) === null || _theme$customization2 === void 0 ? void 0 : _theme$customization2.borderRadius}px`\\n    },\\n    menuCaption: {\\n      fontSize: '0.875rem',\\n      fontWeight: 500,\\n      color: theme.heading,\\n      padding: '6px',\\n      textTransform: 'capitalize',\\n      marginTop: '10px'\\n    },\\n    subMenuCaption: {\\n      fontSize: '0.6875rem',\\n      fontWeight: 500,\\n      color: theme.darkTextSecondary,\\n      textTransform: 'capitalize'\\n    },\\n    commonAvatar: {\\n      cursor: 'pointer',\\n      borderRadius: '8px'\\n    },\\n    smallAvatar: {\\n      width: '22px',\\n      height: '22px',\\n      fontSize: '1rem'\\n    },\\n    mediumAvatar: {\\n      width: '34px',\\n      height: '34px',\\n      fontSize: '1.2rem'\\n    },\\n    largeAvatar: {\\n      width: '44px',\\n      height: '44px',\\n      fontSize: '1.5rem'\\n    }\\n  };\\n}//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./styles/themes/typography.js\\n\");\n\n/***/ }),\n\n/***/ \"./styles/scss/_themes-vars.module.scss\":\n/*!**********************************************!*\\\n  !*** ./styles/scss/_themes-vars.module.scss ***!\n  \\**********************************************/\n/***/ ((module) => {\n\neval(\"// Exports\\nmodule.exports = {\\n\\t\\\"paper\\\": \\\"#ffffff\\\",\\n\\t\\\"primaryLight\\\": \\\"#e3f2fd\\\",\\n\\t\\\"primary200\\\": \\\"#90caf9\\\",\\n\\t\\\"primaryMain\\\": \\\"#2196f3\\\",\\n\\t\\\"primaryDark\\\": \\\"#1e88e5\\\",\\n\\t\\\"primary800\\\": \\\"#1565c0\\\",\\n\\t\\\"secondaryLight\\\": \\\"#ede7f6\\\",\\n\\t\\\"secondary200\\\": \\\"#b39ddb\\\",\\n\\t\\\"secondaryMain\\\": \\\"#673ab7\\\",\\n\\t\\\"secondaryDark\\\": \\\"#5e35b1\\\",\\n\\t\\\"secondary800\\\": \\\"#4527a0\\\",\\n\\t\\\"successLight\\\": \\\"#b9f6ca\\\",\\n\\t\\\"success200\\\": \\\"#69f0ae\\\",\\n\\t\\\"successMain\\\": \\\"#00e676\\\",\\n\\t\\\"successDark\\\": \\\"#00c853\\\",\\n\\t\\\"errorLight\\\": \\\"#ef9a9a\\\",\\n\\t\\\"errorMain\\\": \\\"#f44336\\\",\\n\\t\\\"errorDark\\\": \\\"#c62828\\\",\\n\\t\\\"orangeLight\\\": \\\"#fbe9e7\\\",\\n\\t\\\"orangeMain\\\": \\\"#ffab91\\\",\\n\\t\\\"orangeDark\\\": \\\"#d84315\\\",\\n\\t\\\"warningLight\\\": \\\"#fff8e1\\\",\\n\\t\\\"warningMain\\\": \\\"#ffe57f\\\",\\n\\t\\\"warningDark\\\": \\\"#ffc107\\\",\\n\\t\\\"grey50\\\": \\\"#fafafa\\\",\\n\\t\\\"grey100\\\": \\\"#f5f5f5\\\",\\n\\t\\\"grey200\\\": \\\"#eeeeee\\\",\\n\\t\\\"grey300\\\": \\\"#e0e0e0\\\",\\n\\t\\\"grey500\\\": \\\"#9e9e9e\\\",\\n\\t\\\"grey600\\\": \\\"#757575\\\",\\n\\t\\\"grey700\\\": \\\"#616161\\\",\\n\\t\\\"grey900\\\": \\\"#212121\\\",\\n\\t\\\"darkPaper\\\": \\\"#111936\\\",\\n\\t\\\"darkBackground\\\": \\\"#1a223f\\\",\\n\\t\\\"darkLevel1\\\": \\\"#29314f\\\",\\n\\t\\\"darkLevel2\\\": \\\"#212946\\\",\\n\\t\\\"darkTextTitle\\\": \\\"#d7dcec\\\",\\n\\t\\\"darkTextPrimary\\\": \\\"#bdc8f0\\\",\\n\\t\\\"darkTextSecondary\\\": \\\"#8492c4\\\",\\n\\t\\\"darkPrimaryLight\\\": \\\"#e3f2fd\\\",\\n\\t\\\"darkPrimaryMain\\\": \\\"#2196f3\\\",\\n\\t\\\"darkPrimaryDark\\\": \\\"#1e88e5\\\",\\n\\t\\\"darkPrimary200\\\": \\\"#90caf9\\\",\\n\\t\\\"darkPrimary800\\\": \\\"#1565c0\\\",\\n\\t\\\"darkSecondaryLight\\\": \\\"#d1c4e9\\\",\\n\\t\\\"darkSecondaryMain\\\": \\\"#7c4dff\\\",\\n\\t\\\"darkSecondaryDark\\\": \\\"#651fff\\\",\\n\\t\\\"darkSecondary200\\\": \\\"#b39ddb\\\",\\n\\t\\\"darkSecondary800\\\": \\\"#6200ea\\\"\\n};\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdHlsZXMvc2Nzcy9fdGhlbWVzLXZhcnMubW9kdWxlLnNjc3MuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hZG1pbi1uZXh0LWFwcC8uL3N0eWxlcy9zY3NzL190aGVtZXMtdmFycy5tb2R1bGUuc2Nzcz80YzM3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEV4cG9ydHNcbm1vZHVsZS5leHBvcnRzID0ge1xuXHRcInBhcGVyXCI6IFwiI2ZmZmZmZlwiLFxuXHRcInByaW1hcnlMaWdodFwiOiBcIiNlM2YyZmRcIixcblx0XCJwcmltYXJ5MjAwXCI6IFwiIzkwY2FmOVwiLFxuXHRcInByaW1hcnlNYWluXCI6IFwiIzIxOTZmM1wiLFxuXHRcInByaW1hcnlEYXJrXCI6IFwiIzFlODhlNVwiLFxuXHRcInByaW1hcnk4MDBcIjogXCIjMTU2NWMwXCIsXG5cdFwic2Vjb25kYXJ5TGlnaHRcIjogXCIjZWRlN2Y2XCIsXG5cdFwic2Vjb25kYXJ5MjAwXCI6IFwiI2IzOWRkYlwiLFxuXHRcInNlY29uZGFyeU1haW5cIjogXCIjNjczYWI3XCIsXG5cdFwic2Vjb25kYXJ5RGFya1wiOiBcIiM1ZTM1YjFcIixcblx0XCJzZWNvbmRhcnk4MDBcIjogXCIjNDUyN2EwXCIsXG5cdFwic3VjY2Vzc0xpZ2h0XCI6IFwiI2I5ZjZjYVwiLFxuXHRcInN1Y2Nlc3MyMDBcIjogXCIjNjlmMGFlXCIsXG5cdFwic3VjY2Vzc01haW5cIjogXCIjMDBlNjc2XCIsXG5cdFwic3VjY2Vzc0RhcmtcIjogXCIjMDBjODUzXCIsXG5cdFwiZXJyb3JMaWdodFwiOiBcIiNlZjlhOWFcIixcblx0XCJlcnJvck1haW5cIjogXCIjZjQ0MzM2XCIsXG5cdFwiZXJyb3JEYXJrXCI6IFwiI2M2MjgyOFwiLFxuXHRcIm9yYW5nZUxpZ2h0XCI6IFwiI2ZiZTllN1wiLFxuXHRcIm9yYW5nZU1haW5cIjogXCIjZmZhYjkxXCIsXG5cdFwib3JhbmdlRGFya1wiOiBcIiNkODQzMTVcIixcblx0XCJ3YXJuaW5nTGlnaHRcIjogXCIjZmZmOGUxXCIsXG5cdFwid2FybmluZ01haW5cIjogXCIjZmZlNTdmXCIsXG5cdFwid2FybmluZ0RhcmtcIjogXCIjZmZjMTA3XCIsXG5cdFwiZ3JleTUwXCI6IFwiI2ZhZmFmYVwiLFxuXHRcImdyZXkxMDBcIjogXCIjZjVmNWY1XCIsXG5cdFwiZ3JleTIwMFwiOiBcIiNlZWVlZWVcIixcblx0XCJncmV5MzAwXCI6IFwiI2UwZTBlMFwiLFxuXHRcImdyZXk1MDBcIjogXCIjOWU5ZTllXCIsXG5cdFwiZ3JleTYwMFwiOiBcIiM3NTc1NzVcIixcblx0XCJncmV5NzAwXCI6IFwiIzYxNjE2MVwiLFxuXHRcImdyZXk5MDBcIjogXCIjMjEyMTIxXCIsXG5cdFwiZGFya1BhcGVyXCI6IFwiIzExMTkzNlwiLFxuXHRcImRhcmtCYWNrZ3JvdW5kXCI6IFwiIzFhMjIzZlwiLFxuXHRcImRhcmtMZXZlbDFcIjogXCIjMjkzMTRmXCIsXG5cdFwiZGFya0xldmVsMlwiOiBcIiMyMTI5NDZcIixcblx0XCJkYXJrVGV4dFRpdGxlXCI6IFwiI2Q3ZGNlY1wiLFxuXHRcImRhcmtUZXh0UHJpbWFyeVwiOiBcIiNiZGM4ZjBcIixcblx0XCJkYXJrVGV4dFNlY29uZGFyeVwiOiBcIiM4NDkyYzRcIixcblx0XCJkYXJrUHJpbWFyeUxpZ2h0XCI6IFwiI2UzZjJmZFwiLFxuXHRcImRhcmtQcmltYXJ5TWFpblwiOiBcIiMyMTk2ZjNcIixcblx0XCJkYXJrUHJpbWFyeURhcmtcIjogXCIjMWU4OGU1XCIsXG5cdFwiZGFya1ByaW1hcnkyMDBcIjogXCIjOTBjYWY5XCIsXG5cdFwiZGFya1ByaW1hcnk4MDBcIjogXCIjMTU2NWMwXCIsXG5cdFwiZGFya1NlY29uZGFyeUxpZ2h0XCI6IFwiI2QxYzRlOVwiLFxuXHRcImRhcmtTZWNvbmRhcnlNYWluXCI6IFwiIzdjNGRmZlwiLFxuXHRcImRhcmtTZWNvbmRhcnlEYXJrXCI6IFwiIzY1MWZmZlwiLFxuXHRcImRhcmtTZWNvbmRhcnkyMDBcIjogXCIjYjM5ZGRiXCIsXG5cdFwiZGFya1NlY29uZGFyeTgwMFwiOiBcIiM2MjAwZWFcIlxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./styles/scss/_themes-vars.module.scss\\n\");\n\n/***/ }),\n\n/***/ \"./styles/globals.css\":\n/*!****************************!*\\\n  !*** ./styles/globals.css ***!\n  \\****************************/\n/***/ (() => {\n\n\n\n/***/ }),\n\n/***/ \"@apollo/client\":\n/*!*********************************!*\\\n  !*** external \"@apollo/client\" ***!\n  \\*********************************/\n/***/ ((module) => {\n\n\"use strict\";\nmodule.exports = require(\"@apollo/client\");\n\n/***/ }),\n\n/***/ \"@apollo/client/link/context\":\n/*!**********************************************!*\\\n  !*** external \"@apollo/client/link/context\" ***!\n  \\**********************************************/\n/***/ ((module) => {\n\n\"use strict\";\nmodule.exports = require(\"@apollo/client/link/context\");\n\n/***/ }),\n\n/***/ \"@mui/material\":\n/*!********************************!*\\\n  !*** external \"@mui/material\" ***!\n  \\********************************/\n/***/ ((module) => {\n\n\"use strict\";\nmodule.exports = require(\"@mui/material\");\n\n/***/ }),\n\n/***/ \"@mui/material/styles\":\n/*!***************************************!*\\\n  !*** external \"@mui/material/styles\" ***!\n  \\***************************************/\n/***/ ((module) => {\n\n\"use strict\";\nmodule.exports = require(\"@mui/material/styles\");\n\n/***/ }),\n\n/***/ \"react/jsx-dev-runtime\":\n/*!****************************************!*\\\n  !*** external \"react/jsx-dev-runtime\" ***!\n  \\****************************************/\n/***/ ((module) => {\n\n\"use strict\";\nmodule.exports = require(\"react/jsx-dev-runtime\");\n\n/***/ })\n\n};\n;\n\n// load runtime\nvar __webpack_require__ = require(\"../webpack-runtime.js\");\n__webpack_require__.C(exports);\nvar __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))\nvar __webpack_exports__ = (__webpack_exec__(\"./pages/_app.js\"));\nmodule.exports = __webpack_exports__;\n\n})();"],mappings:"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"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"cf98e148e88345bd05a8e40bac5ec7772c2ef229"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_5y9y4rzfh=function(){return actualCoverage;};}return actualCoverage;}cov_5y9y4rzfh();function cov_1q72jli5gt(){cov_5y9y4rzfh().f[0]++;var path=(cov_5y9y4rzfh().s[0]++,"C:\\Users\\nathn\\Desktop\\final project\\admin-next-app\\.next\\server\\pages\\_app.js");var hash=(cov_5y9y4rzfh().s[1]++,"31e032050ca0025a3fba4a5167dee9d333e9a1aa");var global=(cov_5y9y4rzfh().s[2]++,new Function("return this")());var gcv=(cov_5y9y4rzfh().s[3]++,"__coverage__");var coverageData=(cov_5y9y4rzfh().s[4]++,{path:"C:\\Users\\nathn\\Desktop\\final project\\admin-next-app\\.next\\server\\pages\\_app.js",statementMap:{"0":{start:{line:9,column:0},end:{line:177,column:5}},"1":{start:{line:10,column:14},end:{line:10,column:16}},"2":{start:{line:11,column:0},end:{line:11,column:26}},"3":{start:{line:12,column:0},end:{line:12,column:29}},"4":{start:{line:13,column:0},end:{line:167,column:2}},"5":{start:{line:22,column:0},end:{line:22,column:3010}},"6":{start:{line:33,column:0},end:{line:33,column:8615}},"7":{start:{line:44,column:0},end:{line:44,column:9719}},"8":{start:{line:55,column:0},end:{line:55,column:21533}},"9":{start:{line:66,column:0},end:{line:66,column:10592}},"10":{start:{line:77,column:0},end:{line:77,column:15211}},"11":{start:{line:88,column:0},end:{line:88,column:14805}},"12":{start:{line:98,column:0},end:{line:98,column:4707}},"13":{start:{line:119,column:0},end:{line:119,column:43}},"14":{start:{line:130,column:0},end:{line:130,column:56}},"15":{start:{line:141,column:0},end:{line:141,column:42}},"16":{start:{line:152,column:0},end:{line:152,column:49}},"17":{start:{line:163,column:0},end:{line:163,column:50}},"18":{start:{line:171,column:26},end:{line:171,column:58}},"19":{start:{line:172,column:0},end:{line:172,column:31}},"20":{start:{line:173,column:23},end:{line:173,column:92}},"21":{start:{line:173,column:38},end:{line:173,column:91}},"22":{start:{line:174,column:27},end:{line:174,column:62}},"23":{start:{line:175,column:0},end:{line:175,column:37}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:9,column:1},end:{line:9,column:2}},loc:{start:{line:9,column:7},end:{line:177,column:1}},line:9},"1":{name:"(anonymous_1)",decl:{start:{line:19,column:7},end:{line:19,column:8}},loc:{start:{line:19,column:78},end:{line:24,column:7}},line:19},"2":{name:"(anonymous_2)",decl:{start:{line:30,column:7},end:{line:30,column:8}},loc:{start:{line:30,column:78},end:{line:35,column:7}},line:30},"3":{name:"(anonymous_3)",decl:{start:{line:41,column:7},end:{line:41,column:8}},loc:{start:{line:41,column:78},end:{line:46,column:7}},line:41},"4":{name:"(anonymous_4)",decl:{start:{line:52,column:7},end:{line:52,column:8}},loc:{start:{line:52,column:78},end:{line:57,column:7}},line:52},"5":{name:"(anonymous_5)",decl:{start:{line:63,column:7},end:{line:63,column:8}},loc:{start:{line:63,column:78},end:{line:68,column:7}},line:63},"6":{name:"(anonymous_6)",decl:{start:{line:74,column:7},end:{line:74,column:8}},loc:{start:{line:74,column:78},end:{line:79,column:7}},line:74},"7":{name:"(anonymous_7)",decl:{start:{line:85,column:7},end:{line:85,column:8}},loc:{start:{line:85,column:78},end:{line:90,column:7}},line:85},"8":{name:"(anonymous_8)",decl:{start:{line:96,column:7},end:{line:96,column:8}},loc:{start:{line:96,column:19},end:{line:100,column:7}},line:96},"9":{name:"(anonymous_9)",decl:{start:{line:106,column:7},end:{line:106,column:8}},loc:{start:{line:106,column:13},end:{line:110,column:7}},line:106},"10":{name:"(anonymous_10)",decl:{start:{line:116,column:7},end:{line:116,column:8}},loc:{start:{line:116,column:19},end:{line:121,column:7}},line:116},"11":{name:"(anonymous_11)",decl:{start:{line:127,column:7},end:{line:127,column:8}},loc:{start:{line:127,column:19},end:{line:132,column:7}},line:127},"12":{name:"(anonymous_12)",decl:{start:{line:138,column:7},end:{line:138,column:8}},loc:{start:{line:138,column:19},end:{line:143,column:7}},line:138},"13":{name:"(anonymous_13)",decl:{start:{line:149,column:7},end:{line:149,column:8}},loc:{start:{line:149,column:19},end:{line:154,column:7}},line:149},"14":{name:"(anonymous_14)",decl:{start:{line:160,column:7},end:{line:160,column:8}},loc:{start:{line:160,column:19},end:{line:165,column:7}},line:160},"15":{name:"(anonymous_15)",decl:{start:{line:173,column:23},end:{line:173,column:24}},loc:{start:{line:173,column:38},end:{line:173,column:91}},line:173}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"31e032050ca0025a3fba4a5167dee9d333e9a1aa"});var coverage=(cov_5y9y4rzfh().s[5]++,(cov_5y9y4rzfh().b[0][0]++,global[gcv])||(cov_5y9y4rzfh().b[0][1]++,global[gcv]={}));cov_5y9y4rzfh().s[6]++;if((cov_5y9y4rzfh().b[2][0]++,!coverage[path])||(cov_5y9y4rzfh().b[2][1]++,coverage[path].hash!==hash)){cov_5y9y4rzfh().b[1][0]++;cov_5y9y4rzfh().s[7]++;coverage[path]=coverageData;}else{cov_5y9y4rzfh().b[1][1]++;}var actualCoverage=(cov_5y9y4rzfh().s[8]++,coverage[path]);{cov_5y9y4rzfh().s[9]++;// @ts-ignore
cov_1q72jli5gt=function(){cov_5y9y4rzfh().f[1]++;cov_5y9y4rzfh().s[10]++;return actualCoverage;};}cov_5y9y4rzfh().s[11]++;return actualCoverage;}cov_5y9y4rzfh().s[12]++;cov_1q72jli5gt();cov_5y9y4rzfh().s[13]++;cov_1q72jli5gt().s[0]++;/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */cov_5y9y4rzfh().s[14]++;(()=>{cov_5y9y4rzfh().f[2]++;cov_5y9y4rzfh().s[15]++;cov_1q72jli5gt().f[0]++;var exports=(cov_5y9y4rzfh().s[16]++,(cov_1q72jli5gt().s[1]++,{}));cov_5y9y4rzfh().s[17]++;cov_1q72jli5gt().s[2]++;cov_5y9y4rzfh().s[18]++;exports.id="pages/_app";cov_5y9y4rzfh().s[19]++;cov_1q72jli5gt().s[3]++;cov_5y9y4rzfh().s[20]++;exports.ids=["pages/_app"];cov_5y9y4rzfh().s[21]++;cov_1q72jli5gt().s[4]++;cov_5y9y4rzfh().s[22]++;exports.modules={/***/"./config.js":/*!*******************!*\
  !*** ./config.js ***!
  \*******************/ /***/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";cov_5y9y4rzfh().f[3]++;cov_5y9y4rzfh().s[23]++;cov_1q72jli5gt().f[1]++;cov_5y9y4rzfh().s[24]++;cov_1q72jli5gt().s[5]++;cov_5y9y4rzfh().s[25]++;eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction cov_23gsmht5ry() {\n  var path = \"C:\\\\Users\\\\nathn\\\\Desktop\\\\final project\\\\admin-next-app\\\\config.js\";\n  var hash = \"5ec94783acb8ca0c2a8e7979453b06fbae04a7f6\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"C:\\\\Users\\\\nathn\\\\Desktop\\\\final project\\\\admin-next-app\\\\config.js\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 1,\n          column: 15\n        },\n        end: {\n          line: 8,\n          column: 1\n        }\n      }\n    },\n    fnMap: {},\n    branchMap: {},\n    s: {\n      \"0\": 0\n    },\n    f: {},\n    b: {},\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"5ec94783acb8ca0c2a8e7979453b06fbae04a7f6\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_23gsmht5ry = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_23gsmht5ry();\nconst config = (cov_23gsmht5ry().s[0]++, {\n  // basename: only at build time to set, and Don't add '/' at end off BASENAME for breadcrumbs, also Don't put only '/' use blank('') instead,\n  // like '/berry-material-react/react/default'\n  basename: '/',\n  defaultPath: '/dashboard',\n  fontFamily: `'Roboto', sans-serif`,\n  borderRadius: 12\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (config);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb25maWcuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFlWTs7Ozs7Ozs7O0FBZlosTUFBTUEsTUFBTSw2QkFBRztBQUNiO0FBQ0E7QUFDQUMsRUFBQUEsUUFBUSxFQUFFLEdBSEc7QUFJYkMsRUFBQUEsV0FBVyxFQUFFLFlBSkE7QUFLYkMsRUFBQUEsVUFBVSxFQUFHLHNCQUxBO0FBTWJDLEVBQUFBLFlBQVksRUFBRTtBQU5ELENBQUgsQ0FBWjtBQVNBLGlFQUFlSixNQUFmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWRtaW4tbmV4dC1hcHAvLi9jb25maWcuanM/YzJiMyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjb25maWcgPSB7XHJcbiAgLy8gYmFzZW5hbWU6IG9ubHkgYXQgYnVpbGQgdGltZSB0byBzZXQsIGFuZCBEb24ndCBhZGQgJy8nIGF0IGVuZCBvZmYgQkFTRU5BTUUgZm9yIGJyZWFkY3J1bWJzLCBhbHNvIERvbid0IHB1dCBvbmx5ICcvJyB1c2UgYmxhbmsoJycpIGluc3RlYWQsXHJcbiAgLy8gbGlrZSAnL2JlcnJ5LW1hdGVyaWFsLXJlYWN0L3JlYWN0L2RlZmF1bHQnXHJcbiAgYmFzZW5hbWU6ICcvJyxcclxuICBkZWZhdWx0UGF0aDogJy9kYXNoYm9hcmQnLFxyXG4gIGZvbnRGYW1pbHk6IGAnUm9ib3RvJywgc2Fucy1zZXJpZmAsXHJcbiAgYm9yZGVyUmFkaXVzOiAxMlxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY29uZmlnO1xyXG4iXSwibmFtZXMiOlsiY29uZmlnIiwiYmFzZW5hbWUiLCJkZWZhdWx0UGF0aCIsImZvbnRGYW1pbHkiLCJib3JkZXJSYWRpdXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./config.js\n");/***/},/***/"./pages/_app.js":/*!***********************!*\
  !*** ./pages/_app.js ***!
  \***********************/ /***/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";cov_5y9y4rzfh().f[4]++;cov_5y9y4rzfh().s[26]++;cov_1q72jli5gt().f[2]++;cov_5y9y4rzfh().s[27]++;cov_1q72jli5gt().s[6]++;cov_5y9y4rzfh().s[28]++;eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _apollo_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @apollo/client */ \"@apollo/client\");\n/* harmony import */ var _apollo_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_apollo_client__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mui/material */ \"@mui/material\");\n/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_mui_material__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _src_apollo_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/apollo/client */ \"./src/apollo/client.js\");\n/* harmony import */ var _styles_themes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../styles/themes */ \"./styles/themes/index.js\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../config */ \"./config.js\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../styles/globals.css */ \"./styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__);\nvar _jsxFileName = \"C:\\\\Users\\\\nathn\\\\Desktop\\\\final project\\\\admin-next-app\\\\pages\\\\_app.js\";\n\nfunction cov_1xki921t1v() {\n  var path = \"C:\\\\Users\\\\nathn\\\\Desktop\\\\final project\\\\admin-next-app\\\\pages\\\\_app.js\";\n  var hash = \"c4fa241ee60d6eb08256f9902d48e59ff047363b\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"C:\\\\Users\\\\nathn\\\\Desktop\\\\final project\\\\admin-next-app\\\\pages\\\\_app.js\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 12,\n          column: 4\n        },\n        end: {\n          line: 25,\n          column: 5\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"MyApp\",\n        decl: {\n          start: {\n            line: 11,\n            column: 9\n          },\n          end: {\n            line: 11,\n            column: 14\n          }\n        },\n        loc: {\n          start: {\n            line: 11,\n            column: 39\n          },\n          end: {\n            line: 26,\n            column: 1\n          }\n        },\n        line: 11\n      }\n    },\n    branchMap: {},\n    s: {\n      \"0\": 0\n    },\n    f: {\n      \"0\": 0\n    },\n    b: {},\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"c4fa241ee60d6eb08256f9902d48e59ff047363b\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_1xki921t1v = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_1xki921t1v();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n // import {store} from \"../src/store\";\n\n\n\n\n\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  cov_1xki921t1v().f[0]++;\n  cov_1xki921t1v().s[0]++;\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(_apollo_client__WEBPACK_IMPORTED_MODULE_0__.ApolloProvider, {\n    client: _src_apollo_client__WEBPACK_IMPORTED_MODULE_2__.client,\n    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(_mui_material__WEBPACK_IMPORTED_MODULE_1__.ThemeProvider, {\n      theme: (0,_styles_themes__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({\n        isOpen: [],\n        // for active default menu\n        fontFamily: _config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].fontFamily,\n        borderRadius: _config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].borderRadius,\n        opened: false\n      }),\n      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(Component, _objectSpread({}, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MyApp);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWVZOzs7Ozs7Ozs7Ozs7Ozs7O0FBZlo7QUFDQTtDQUdBOztBQUNBO0FBQ0E7QUFFQTs7O0FBRUEsU0FBU0ssS0FBVCxDQUFlO0FBQUNDLEVBQUFBLFNBQUQ7QUFBWUMsRUFBQUE7QUFBWixDQUFmLEVBQXVDO0FBQUE7QUFBQTtBQUNuQyxzQkFDSSw4REFBQywwREFBRDtBQUFnQixVQUFNLEVBQUVMLHNEQUF4QjtBQUFBLDJCQUVJLDhEQUFDLHdEQUFEO0FBQWUsV0FBSyxFQUFFQywwREFBTSxDQUFDO0FBQ3pCSyxRQUFBQSxNQUFNLEVBQUUsRUFEaUI7QUFDYjtBQUNaQyxRQUFBQSxVQUFVLEVBQUVMLDBEQUZhO0FBR3pCTSxRQUFBQSxZQUFZLEVBQUVOLDREQUhXO0FBSXpCTyxRQUFBQSxNQUFNLEVBQUU7QUFKaUIsT0FBRCxDQUE1QjtBQUFBLDZCQU1JLDhEQUFDLFNBQUQsb0JBQWVKLFNBQWY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQU5KO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFGSjtBQUFBO0FBQUE7QUFBQTtBQUFBLFVBREo7QUFjSDs7QUFFRCxpRUFBZUYsS0FBZiIsInNvdXJjZXMiOlsid2VicGFjazovL2FkbWluLW5leHQtYXBwLy4vcGFnZXMvX2FwcC5qcz9lMGFkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QXBvbGxvUHJvdmlkZXJ9IGZyb20gXCJAYXBvbGxvL2NsaWVudFwiO1xuaW1wb3J0IHtUaGVtZVByb3ZpZGVyfSBmcm9tIFwiQG11aS9tYXRlcmlhbFwiO1xuXG5pbXBvcnQge2NsaWVudH0gZnJvbSBcIi4uL3NyYy9hcG9sbG8vY2xpZW50XCI7XG4vLyBpbXBvcnQge3N0b3JlfSBmcm9tIFwiLi4vc3JjL3N0b3JlXCI7XG5pbXBvcnQgdGhlbWVzIGZyb20gXCIuLi9zdHlsZXMvdGhlbWVzXCI7XG5pbXBvcnQgY29uZmlnIGZyb20gXCIuLi9jb25maWdcIjtcblxuaW1wb3J0ICcuLi9zdHlsZXMvZ2xvYmFscy5jc3MnO1xuXG5mdW5jdGlvbiBNeUFwcCh7Q29tcG9uZW50LCBwYWdlUHJvcHN9KSB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPEFwb2xsb1Byb3ZpZGVyIGNsaWVudD17Y2xpZW50fT5cbiAgICAgICAgICAgIHsvKjxQcm92aWRlciBzdG9yZT17c3RvcmV9PiovfVxuICAgICAgICAgICAgPFRoZW1lUHJvdmlkZXIgdGhlbWU9e3RoZW1lcyh7XG4gICAgICAgICAgICAgICAgaXNPcGVuOiBbXSwgLy8gZm9yIGFjdGl2ZSBkZWZhdWx0IG1lbnVcbiAgICAgICAgICAgICAgICBmb250RmFtaWx5OiBjb25maWcuZm9udEZhbWlseSxcbiAgICAgICAgICAgICAgICBib3JkZXJSYWRpdXM6IGNvbmZpZy5ib3JkZXJSYWRpdXMsXG4gICAgICAgICAgICAgICAgb3BlbmVkOiBmYWxzZVxuICAgICAgICAgICAgfSl9PlxuICAgICAgICAgICAgICAgIDxDb21wb25lbnQgey4uLnBhZ2VQcm9wc30gLz5cbiAgICAgICAgICAgIDwvVGhlbWVQcm92aWRlcj5cbiAgICAgICAgICAgIHsvKjwvUHJvdmlkZXI+Ki99XG4gICAgICAgIDwvQXBvbGxvUHJvdmlkZXI+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBNeUFwcFxuIl0sIm5hbWVzIjpbIkFwb2xsb1Byb3ZpZGVyIiwiVGhlbWVQcm92aWRlciIsImNsaWVudCIsInRoZW1lcyIsImNvbmZpZyIsIk15QXBwIiwiQ29tcG9uZW50IiwicGFnZVByb3BzIiwiaXNPcGVuIiwiZm9udEZhbWlseSIsImJvcmRlclJhZGl1cyIsIm9wZW5lZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/_app.js\n");/***/},/***/"./src/apollo/client.js":/*!******************************!*\
  !*** ./src/apollo/client.js ***!
  \******************************/ /***/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";cov_5y9y4rzfh().f[5]++;cov_5y9y4rzfh().s[29]++;cov_1q72jli5gt().f[3]++;cov_5y9y4rzfh().s[30]++;cov_1q72jli5gt().s[7]++;cov_5y9y4rzfh().s[31]++;eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"client\": () => (/* binding */ client)\n/* harmony export */ });\n/* harmony import */ var _apollo_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @apollo/client */ \"@apollo/client\");\n/* harmony import */ var _apollo_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_apollo_client__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _apollo_client_link_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @apollo/client/link/context */ \"@apollo/client/link/context\");\n/* harmony import */ var _apollo_client_link_context__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_apollo_client_link_context__WEBPACK_IMPORTED_MODULE_1__);\nfunction cov_df46kskeg() {\n  var path = \"C:\\\\Users\\\\nathn\\\\Desktop\\\\final project\\\\admin-next-app\\\\src\\\\apollo\\\\client.js\";\n  var hash = \"b0dba22b14523f3a81ab36017f53dbf35b246f11\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"C:\\\\Users\\\\nathn\\\\Desktop\\\\final project\\\\admin-next-app\\\\src\\\\apollo\\\\client.js\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 5,\n          column: 14\n        },\n        end: {\n          line: 5,\n          column: 33\n        }\n      },\n      \"1\": {\n        start: {\n          line: 7,\n          column: 17\n        },\n        end: {\n          line: 10,\n          column: 2\n        }\n      },\n      \"2\": {\n        start: {\n          line: 12,\n          column: 17\n        },\n        end: {\n          line: 30,\n          column: 2\n        }\n      },\n      \"3\": {\n        start: {\n          line: 13,\n          column: 18\n        },\n        end: {\n          line: 13,\n          column: 47\n        }\n      },\n      \"4\": {\n        start: {\n          line: 23,\n          column: 4\n        },\n        end: {\n          line: 29,\n          column: 6\n        }\n      },\n      \"5\": {\n        start: {\n          line: 32,\n          column: 22\n        },\n        end: {\n          line: 35,\n          column: 2\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 12,\n            column: 28\n          },\n          end: {\n            line: 12,\n            column: 29\n          }\n        },\n        loc: {\n          start: {\n            line: 12,\n            column: 52\n          },\n          end: {\n            line: 30,\n            column: 1\n          }\n        },\n        line: 12\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 26,\n            column: 27\n          },\n          end: {\n            line: 26,\n            column: 75\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 26,\n            column: 35\n          },\n          end: {\n            line: 26,\n            column: 70\n          }\n        }, {\n          start: {\n            line: 26,\n            column: 73\n          },\n          end: {\n            line: 26,\n            column: 75\n          }\n        }],\n        line: 26\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0\n    },\n    f: {\n      \"0\": 0\n    },\n    b: {\n      \"0\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"b0dba22b14523f3a81ab36017f53dbf35b246f11\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_df46kskeg = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_df46kskeg();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n // import fbConfig from \"../firebase/fb-config\";\n\nconst cache = (cov_df46kskeg().s[0]++, new _apollo_client__WEBPACK_IMPORTED_MODULE_0__.InMemoryCache());\nconst httpLink = (cov_df46kskeg().s[1]++, (0,_apollo_client__WEBPACK_IMPORTED_MODULE_0__.createHttpLink)({\n  // uri: 'https://finalproject34.herokuapp.com/graphql'\n  uri: 'http://localhost:8000/graphql'\n}));\nconst authLink = (cov_df46kskeg().s[2]++, (0,_apollo_client_link_context__WEBPACK_IMPORTED_MODULE_1__.setContext)(async (_, {\n  headers\n}) => {\n  cov_df46kskeg().f[0]++;\n  const token = (cov_df46kskeg().s[3]++, localStorage.getItem('store')); // let phoneverification = \"\";\n  //\n  // const user = await fbConfig.auth().currentUser;\n  // if (user) {\n  //   await user.getIdToken().then((t) => {\n  //     phoneverification = t;\n  //   });\n  // }\n\n  cov_df46kskeg().s[4]++;\n  return {\n    headers: _objectSpread(_objectSpread({}, headers), {}, {\n      authorization: token ? (cov_df46kskeg().b[0][0]++, `Bearer ${JSON.parse(token).token}`) : (cov_df46kskeg().b[0][1]++, '') // phoneverification,\n\n    })\n  };\n}));\nconst client = (cov_df46kskeg().s[5]++, new _apollo_client__WEBPACK_IMPORTED_MODULE_0__.ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: cache\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYXBvbGxvL2NsaWVudC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZVk7Ozs7Ozs7Ozs7Ozs7Ozs7QUFmWjtDQUVBOztBQUVBLE1BQU1JLEtBQUssNEJBQUcsSUFBSUYseURBQUosRUFBSCxDQUFYO0FBRUEsTUFBTUcsUUFBUSw0QkFBR0osOERBQWMsQ0FBQztBQUM1QjtBQUNBSyxFQUFBQSxHQUFHLEVBQUU7QUFGdUIsQ0FBRCxDQUFqQixDQUFkO0FBS0EsTUFBTUMsUUFBUSw0QkFBR0osdUVBQVUsQ0FBQyxPQUFPSyxDQUFQLEVBQVU7QUFBQ0MsRUFBQUE7QUFBRCxDQUFWLEtBQXdCO0FBQUE7QUFDaEQsUUFBTUMsS0FBSyw0QkFBR0MsWUFBWSxDQUFDQyxPQUFiLENBQXFCLE9BQXJCLENBQUgsQ0FBWCxDQURnRCxDQUVoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQVRnRDtBQVdoRCxTQUFPO0FBQ0hILElBQUFBLE9BQU8sa0NBQ0FBLE9BREE7QUFFSEksTUFBQUEsYUFBYSxFQUFFSCxLQUFLLCtCQUFJLFVBQVNJLElBQUksQ0FBQ0MsS0FBTCxDQUFXTCxLQUFYLEVBQWtCQSxLQUFNLEVBQXJDLGdDQUF5QyxFQUF6QyxDQUZqQixDQUdIOztBQUhHO0FBREosR0FBUDtBQU9ILENBbEIwQixDQUFiLENBQWQ7QUFvQk8sTUFBTU0sTUFBTSw0QkFBRyxJQUFJaEIsd0RBQUosQ0FBaUI7QUFDbkNpQixFQUFBQSxJQUFJLEVBQUVWLFFBQVEsQ0FBQ1csTUFBVCxDQUFnQmIsUUFBaEIsQ0FENkI7QUFFbkNELEVBQUFBLEtBQUssRUFBRUE7QUFGNEIsQ0FBakIsQ0FBSCxDQUFaIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWRtaW4tbmV4dC1hcHAvLi9zcmMvYXBvbGxvL2NsaWVudC5qcz81MTU0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QXBvbGxvQ2xpZW50LCBjcmVhdGVIdHRwTGluaywgSW5NZW1vcnlDYWNoZX0gZnJvbSAnQGFwb2xsby9jbGllbnQnO1xyXG5pbXBvcnQge3NldENvbnRleHR9IGZyb20gJ0BhcG9sbG8vY2xpZW50L2xpbmsvY29udGV4dCc7XHJcbi8vIGltcG9ydCBmYkNvbmZpZyBmcm9tIFwiLi4vZmlyZWJhc2UvZmItY29uZmlnXCI7XHJcblxyXG5jb25zdCBjYWNoZSA9IG5ldyBJbk1lbW9yeUNhY2hlKCk7XHJcblxyXG5jb25zdCBodHRwTGluayA9IGNyZWF0ZUh0dHBMaW5rKHtcclxuICAgIC8vIHVyaTogJ2h0dHBzOi8vZmluYWxwcm9qZWN0MzQuaGVyb2t1YXBwLmNvbS9ncmFwaHFsJ1xyXG4gICAgdXJpOiAnaHR0cDovL2xvY2FsaG9zdDo4MDAwL2dyYXBocWwnXHJcbn0pO1xyXG5cclxuY29uc3QgYXV0aExpbmsgPSBzZXRDb250ZXh0KGFzeW5jIChfLCB7aGVhZGVyc30pID0+IHtcclxuICAgIGNvbnN0IHRva2VuID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3N0b3JlJyk7XHJcbiAgICAvLyBsZXQgcGhvbmV2ZXJpZmljYXRpb24gPSBcIlwiO1xyXG4gICAgLy9cclxuICAgIC8vIGNvbnN0IHVzZXIgPSBhd2FpdCBmYkNvbmZpZy5hdXRoKCkuY3VycmVudFVzZXI7XHJcbiAgICAvLyBpZiAodXNlcikge1xyXG4gICAgLy8gICBhd2FpdCB1c2VyLmdldElkVG9rZW4oKS50aGVuKCh0KSA9PiB7XHJcbiAgICAvLyAgICAgcGhvbmV2ZXJpZmljYXRpb24gPSB0O1xyXG4gICAgLy8gICB9KTtcclxuICAgIC8vIH1cclxuXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgICAgLi4uaGVhZGVycyxcclxuICAgICAgICAgICAgYXV0aG9yaXphdGlvbjogdG9rZW4gPyBgQmVhcmVyICR7SlNPTi5wYXJzZSh0b2tlbikudG9rZW59YCA6ICcnXHJcbiAgICAgICAgICAgIC8vIHBob25ldmVyaWZpY2F0aW9uLFxyXG4gICAgICAgIH1cclxuICAgIH07XHJcbn0pO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNsaWVudCA9IG5ldyBBcG9sbG9DbGllbnQoe1xyXG4gICAgbGluazogYXV0aExpbmsuY29uY2F0KGh0dHBMaW5rKSxcclxuICAgIGNhY2hlOiBjYWNoZVxyXG59KTtcclxuIl0sIm5hbWVzIjpbIkFwb2xsb0NsaWVudCIsImNyZWF0ZUh0dHBMaW5rIiwiSW5NZW1vcnlDYWNoZSIsInNldENvbnRleHQiLCJjYWNoZSIsImh0dHBMaW5rIiwidXJpIiwiYXV0aExpbmsiLCJfIiwiaGVhZGVycyIsInRva2VuIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsImF1dGhvcml6YXRpb24iLCJKU09OIiwicGFyc2UiLCJjbGllbnQiLCJsaW5rIiwiY29uY2F0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/apollo/client.js\n");/***/},/***/"./styles/themes/compStyleOverride.js":/*!********************************************!*\
  !*** ./styles/themes/compStyleOverride.js ***!
  \********************************************/ /***/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";cov_5y9y4rzfh().f[6]++;cov_5y9y4rzfh().s[32]++;cov_1q72jli5gt().f[4]++;cov_5y9y4rzfh().s[33]++;cov_1q72jli5gt().s[8]++;cov_5y9y4rzfh().s[34]++;eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ componentStyleOverrides)\n/* harmony export */ });\nfunction cov_284rqmbwoy() {\n  var path = \"C:\\\\Users\\\\nathn\\\\Desktop\\\\final project\\\\admin-next-app\\\\styles\\\\themes\\\\compStyleOverride.js\";\n  var hash = \"881267d5ff95769f139cebdd1dbdf289ecd3eaa9\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"C:\\\\Users\\\\nathn\\\\Desktop\\\\final project\\\\admin-next-app\\\\styles\\\\themes\\\\compStyleOverride.js\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 2,\n          column: 18\n        },\n        end: {\n          line: 2,\n          column: 38\n        }\n      },\n      \"1\": {\n        start: {\n          line: 3,\n          column: 2\n        },\n        end: {\n          line: 186,\n          column: 4\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"componentStyleOverrides\",\n        decl: {\n          start: {\n            line: 1,\n            column: 24\n          },\n          end: {\n            line: 1,\n            column: 47\n          }\n        },\n        loc: {\n          start: {\n            line: 1,\n            column: 55\n          },\n          end: {\n            line: 187,\n            column: 1\n          }\n        },\n        line: 1\n      }\n    },\n    branchMap: {},\n    s: {\n      \"0\": 0,\n      \"1\": 0\n    },\n    f: {\n      \"0\": 0\n    },\n    b: {},\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"881267d5ff95769f139cebdd1dbdf289ecd3eaa9\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_284rqmbwoy = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_284rqmbwoy();\nfunction componentStyleOverrides(theme) {\n  var _theme$colors, _theme$customization, _theme$colors2, _theme$customization2, _theme$colors3, _theme$colors4, _theme$customization3, _theme$customization4, _theme$colors5, _theme$colors6, _theme$colors7, _theme$colors8, _theme$colors9;\n\n  cov_284rqmbwoy().f[0]++;\n  const bgColor = (cov_284rqmbwoy().s[0]++, (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.grey50);\n  cov_284rqmbwoy().s[1]++;\n  return {\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          fontWeight: 500,\n          borderRadius: '4px'\n        }\n      }\n    },\n    MuiPaper: {\n      defaultProps: {\n        elevation: 0\n      },\n      styleOverrides: {\n        root: {\n          backgroundImage: 'none'\n        },\n        rounded: {\n          borderRadius: `${theme === null || theme === void 0 ? void 0 : (_theme$customization = theme.customization) === null || _theme$customization === void 0 ? void 0 : _theme$customization.borderRadius}px`\n        }\n      }\n    },\n    MuiCardHeader: {\n      styleOverrides: {\n        root: {\n          color: (_theme$colors2 = theme.colors) === null || _theme$colors2 === void 0 ? void 0 : _theme$colors2.textDark,\n          padding: '24px'\n        },\n        title: {\n          fontSize: '1.125rem'\n        }\n      }\n    },\n    MuiCardContent: {\n      styleOverrides: {\n        root: {\n          padding: '24px'\n        }\n      }\n    },\n    MuiCardActions: {\n      styleOverrides: {\n        root: {\n          padding: '24px'\n        }\n      }\n    },\n    MuiListItemButton: {\n      styleOverrides: {\n        root: {\n          color: theme.darkTextPrimary,\n          paddingTop: '10px',\n          paddingBottom: '10px',\n          '&.Mui-selected': {\n            color: theme.menuSelected,\n            backgroundColor: theme.menuSelectedBack,\n            '&:hover': {\n              backgroundColor: theme.menuSelectedBack\n            },\n            '& .MuiListItemIcon-root': {\n              color: theme.menuSelected\n            }\n          },\n          '&:hover': {\n            backgroundColor: theme.menuSelectedBack,\n            color: theme.menuSelected,\n            '& .MuiListItemIcon-root': {\n              color: theme.menuSelected\n            }\n          }\n        }\n      }\n    },\n    MuiListItemIcon: {\n      styleOverrides: {\n        root: {\n          color: theme.darkTextPrimary,\n          minWidth: '36px'\n        }\n      }\n    },\n    MuiListItemText: {\n      styleOverrides: {\n        primary: {\n          color: theme.textDark\n        }\n      }\n    },\n    MuiInputBase: {\n      styleOverrides: {\n        input: {\n          color: theme.textDark,\n          '&::placeholder': {\n            color: theme.darkTextSecondary,\n            fontSize: '0.875rem'\n          }\n        }\n      }\n    },\n    MuiOutlinedInput: {\n      styleOverrides: {\n        root: {\n          background: bgColor,\n          borderRadius: `${theme === null || theme === void 0 ? void 0 : (_theme$customization2 = theme.customization) === null || _theme$customization2 === void 0 ? void 0 : _theme$customization2.borderRadius}px`,\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderColor: (_theme$colors3 = theme.colors) === null || _theme$colors3 === void 0 ? void 0 : _theme$colors3.grey400\n          },\n          '&:hover $notchedOutline': {\n            borderColor: (_theme$colors4 = theme.colors) === null || _theme$colors4 === void 0 ? void 0 : _theme$colors4.primaryLight\n          },\n          '&.MuiInputBase-multiline': {\n            padding: 1\n          }\n        },\n        input: {\n          fontWeight: 500,\n          background: bgColor,\n          padding: '15.5px 14px',\n          borderRadius: `${theme === null || theme === void 0 ? void 0 : (_theme$customization3 = theme.customization) === null || _theme$customization3 === void 0 ? void 0 : _theme$customization3.borderRadius}px`,\n          '&.MuiInputBase-inputSizeSmall': {\n            padding: '10px 14px',\n            '&.MuiInputBase-inputAdornedStart': {\n              paddingLeft: 0\n            }\n          }\n        },\n        inputAdornedStart: {\n          paddingLeft: 4\n        },\n        notchedOutline: {\n          borderRadius: `${theme === null || theme === void 0 ? void 0 : (_theme$customization4 = theme.customization) === null || _theme$customization4 === void 0 ? void 0 : _theme$customization4.borderRadius}px`\n        }\n      }\n    },\n    MuiSlider: {\n      styleOverrides: {\n        root: {\n          '&.Mui-disabled': {\n            color: (_theme$colors5 = theme.colors) === null || _theme$colors5 === void 0 ? void 0 : _theme$colors5.grey300\n          }\n        },\n        mark: {\n          backgroundColor: theme.paper,\n          width: '4px'\n        },\n        valueLabel: {\n          color: theme === null || theme === void 0 ? void 0 : (_theme$colors6 = theme.colors) === null || _theme$colors6 === void 0 ? void 0 : _theme$colors6.primaryLight\n        }\n      }\n    },\n    MuiDivider: {\n      styleOverrides: {\n        root: {\n          borderColor: theme.divider,\n          opacity: 1\n        }\n      }\n    },\n    MuiAvatar: {\n      styleOverrides: {\n        root: {\n          color: (_theme$colors7 = theme.colors) === null || _theme$colors7 === void 0 ? void 0 : _theme$colors7.primaryDark,\n          background: (_theme$colors8 = theme.colors) === null || _theme$colors8 === void 0 ? void 0 : _theme$colors8.primary200\n        }\n      }\n    },\n    MuiChip: {\n      styleOverrides: {\n        root: {\n          '&.MuiChip-deletable .MuiChip-deleteIcon': {\n            color: 'inherit'\n          }\n        }\n      }\n    },\n    MuiTooltip: {\n      styleOverrides: {\n        tooltip: {\n          color: theme.paper,\n          background: (_theme$colors9 = theme.colors) === null || _theme$colors9 === void 0 ? void 0 : _theme$colors9.grey700\n        }\n      }\n    }\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdHlsZXMvdGhlbWVzL2NvbXBTdHlsZU92ZXJyaWRlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFlWTs7Ozs7Ozs7O0FBZkcsU0FBU0EsdUJBQVQsQ0FBaUNDLEtBQWpDLEVBQXdDO0FBQUE7O0FBQUE7QUFDckQsUUFBTUMsT0FBTyw4Q0FBR0QsS0FBSyxDQUFDRSxNQUFULGtEQUFHLGNBQWNDLE1BQWpCLENBQWI7QUFEcUQ7QUFFckQsU0FBTztBQUNMQyxJQUFBQSxTQUFTLEVBQUU7QUFDVEMsTUFBQUEsY0FBYyxFQUFFO0FBQ2RDLFFBQUFBLElBQUksRUFBRTtBQUNKQyxVQUFBQSxVQUFVLEVBQUUsR0FEUjtBQUVKQyxVQUFBQSxZQUFZLEVBQUU7QUFGVjtBQURRO0FBRFAsS0FETjtBQVNMQyxJQUFBQSxRQUFRLEVBQUU7QUFDUkMsTUFBQUEsWUFBWSxFQUFFO0FBQ1pDLFFBQUFBLFNBQVMsRUFBRTtBQURDLE9BRE47QUFJUk4sTUFBQUEsY0FBYyxFQUFFO0FBQ2RDLFFBQUFBLElBQUksRUFBRTtBQUNKTSxVQUFBQSxlQUFlLEVBQUU7QUFEYixTQURRO0FBSWRDLFFBQUFBLE9BQU8sRUFBRTtBQUNQTCxVQUFBQSxZQUFZLEVBQUcsR0FBRVIsS0FBSCxhQUFHQSxLQUFILCtDQUFHQSxLQUFLLENBQUVjLGFBQVYseURBQUcscUJBQXNCTixZQUFhO0FBRDdDO0FBSks7QUFKUixLQVRMO0FBc0JMTyxJQUFBQSxhQUFhLEVBQUU7QUFDYlYsTUFBQUEsY0FBYyxFQUFFO0FBQ2RDLFFBQUFBLElBQUksRUFBRTtBQUNKVSxVQUFBQSxLQUFLLG9CQUFFaEIsS0FBSyxDQUFDRSxNQUFSLG1EQUFFLGVBQWNlLFFBRGpCO0FBRUpDLFVBQUFBLE9BQU8sRUFBRTtBQUZMLFNBRFE7QUFLZEMsUUFBQUEsS0FBSyxFQUFFO0FBQ0xDLFVBQUFB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QU8sRUFBRTtBQUZMO0FBRFE7QUFETixLQXRKUDtBQThKTEMsSUFBQUEsU0FBUyxFQUFFO0FBQ1RqRCxNQUFBQSxjQUFjLEVBQUU7QUFDZEMsUUFBQUEsSUFBSSxFQUFFO0FBQ0pVLFVBQUFBLEtBQUssb0JBQUVoQixLQUFLLENBQUNFLE1BQVIsbURBQUUsZUFBY3FELFdBRGpCO0FBRUpqQixVQUFBQSxVQUFVLG9CQUFFdEMsS0FBSyxDQUFDRSxNQUFSLG1EQUFFLGVBQWNzRDtBQUZ0QjtBQURRO0FBRFAsS0E5Sk47QUFzS0xDLElBQUFBLE9BQU8sRUFBRTtBQUNQcEQsTUFBQUEsY0FBYyxFQUFFO0FBQ2RDLFFBQUFBLElBQUksRUFBRTtBQUNKLHFEQUEyQztBQUN6Q1UsWUFBQUEsS0FBSyxFQUFFO0FBRGtDO0FBRHZDO0FBRFE7QUFEVCxLQXRLSjtBQStLTDBDLElBQUFBLFVBQVUsRUFBRTtBQUNWckQsTUFBQUEsY0FBYyxFQUFFO0FBQ2RzRCxRQUFBQSxPQUFPLEVBQUU7QUFDUDNDLFVBQUFBLEtBQUssRUFBRWhCLEtBQUssQ0FBQ2dELEtBRE47QUFFUFYsVUFBQUEsVUFBVSxvQkFBRXRDLEtBQUssQ0FBQ0UsTUFBUixtREFBRSxlQUFjMEQ7QUFGbkI7QUFESztBQUROO0FBL0tQLEdBQVA7QUF3TEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hZG1pbi1uZXh0LWFwcC8uL3N0eWxlcy90aGVtZXMvY29tcFN0eWxlT3ZlcnJpZGUuanM/OGEyZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjb21wb25lbnRTdHlsZU92ZXJyaWRlcyh0aGVtZSkge1xyXG4gIGNvbnN0IGJnQ29sb3IgPSB0aGVtZS5jb2xvcnM/LmdyZXk1MDtcclxuICByZXR1cm4ge1xyXG4gICAgTXVpQnV0dG9uOiB7XHJcbiAgICAgIHN0eWxlT3ZlcnJpZGVzOiB7XHJcbiAgICAgICAgcm9vdDoge1xyXG4gICAgICAgICAgZm9udFdlaWdodDogNTAwLFxyXG4gICAgICAgICAgYm9yZGVyUmFkaXVzOiAnNHB4J1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfSxcclxuICAgIE11aVBhcGVyOiB7XHJcbiAgICAgIGRlZmF1bHRQcm9wczoge1xyXG4gICAgICAgIGVsZXZhdGlvbjogMFxyXG4gICAgICB9LFxyXG4gICAgICBzdHlsZU92ZXJyaWRlczoge1xyXG4gICAgICAgIHJvb3Q6IHtcclxuICAgICAgICAgIGJhY2tncm91bmRJbWFnZTogJ25vbmUnXHJcbiAgICAgICAgfSxcclxuICAgICAgICByb3VuZGVkOiB7XHJcbiAgICAgICAgICBib3JkZXJSYWRpdXM6IGAke3RoZW1lPy5jdXN0b21pemF0aW9uPy5ib3JkZXJSYWRpdXN9cHhgXHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gICAgTXVpQ2FyZEhlYWRlcjoge1xyXG4gICAgICBzdHlsZU92ZXJyaWRlczoge1xyXG4gICAgICAgIHJvb3Q6IHtcclxuICAgICAgICAgIGNvbG9yOiB0aGVtZS5jb2xvcnM/LnRleHREYXJrLFxyXG4gICAgICAgICAgcGFkZGluZzogJzI0cHgnXHJcbiAgICAgICAgfSxcclxuICAgICAgICB0aXRsZToge1xyXG4gICAgICAgICAgZm9udFNpemU6ICcxLjEyNXJlbSdcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0sXHJcbiAgICBNdWlDYXJkQ29udGVudDoge1xyXG4gICAgICBzdHlsZU92ZXJyaWRlczoge1xyXG4gICAgICAgIHJvb3Q6IHtcclxuICAgICAgICAgIHBhZGRpbmc6ICcyNHB4J1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfSxcclxuICAgIE11aUNhcmRBY3Rpb25zOiB7XHJcbiAgICAgIHN0eWxlT3ZlcnJpZGVzOiB7XHJcbiAgICAgICAgcm9vdDoge1xyXG4gICAgICAgICAgcGFkZGluZzogJzI0cHgnXHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gICAgTXVpTGlzdEl0ZW1CdXR0b246IHtcclxuICAgICAgc3R5bGVPdmVycmlkZXM6IHtcclxuICAgICAgICByb290OiB7XHJcbiAgICAgICAgICBjb2xvcjogdGhlbWUuZGFya1RleHRQcmltYXJ5LFxyXG4gICAgICAgICAgcGFkZGluZ1RvcDogJzEwcHgnLFxyXG4gICAgICAgICAgcGFkZGluZ0JvdHRvbTogJzEwcHgnLFxyXG4gICAgICAgICAgJyYuTXVpLXNlbGVjdGVkJzoge1xyXG4gICAgICAgICAgICBjb2xvcjogdGhlbWUubWVudVNlbGVjdGVkLFxyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLm1lbnVTZWxlY3RlZEJhY2ssXHJcbiAgICAgICAgICAgICcmOmhvdmVyJzoge1xyXG4gICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUubWVudVNlbGVjdGVkQmFja1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAnJiAuTXVpTGlzdEl0ZW1JY29uLXJvb3QnOiB7XHJcbiAgICAgICAgICAgICAgY29sb3I6IHRoZW1lLm1lbnVTZWxlY3RlZFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAgJyY6aG92ZXInOiB7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUubWVudVNlbGVjdGVkQmFjayxcclxuICAgICAgICAgICAgY29sb3I6IHRoZW1lLm1lbnVTZWxlY3RlZCxcclxuICAgICAgICAgICAgJyYgLk11aUxpc3RJdGVtSWNvbi1yb290Jzoge1xyXG4gICAgICAgICAgICAgIGNvbG9yOiB0aGVtZS5tZW51U2VsZWN0ZWRcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfSxcclxuICAgIE11aUxpc3RJdGVtSWNvbjoge1xyXG4gICAgICBzdHlsZU92ZXJyaWRlczoge1xyXG4gICAgICAgIHJvb3Q6IHtcclxuICAgICAgICAgIGNvbG9yOiB0aGVtZS5kYXJrVGV4dFByaW1hcnksXHJcbiAgICAgICAgICBtaW5XaWR0aDogJzM2cHgnXHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gICAgTXVpTGlzdEl0ZW1UZXh0OiB7XHJcbiAgICAgIHN0eWxlT3ZlcnJpZGVzOiB7XHJcbiAgICAgICAgcHJpbWFyeToge1xyXG4gICAgICAgICAgY29sb3I6IHRoZW1lLnRleHREYXJrXHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gICAgTXVpSW5wdXRCYXNlOiB7XHJcbiAgICAgIHN0eWxlT3ZlcnJpZGVzOiB7XHJcbiAgICAgICAgaW5wdXQ6IHtcclxuICAgICAgICAgIGNvbG9yOiB0aGVtZS50ZXh0RGFyayxcclxuICAgICAgICAgICcmOjpwbGFjZWhvbGRlcic6IHtcclxuICAgICAgICAgICAgY29sb3I6IHRoZW1lLmRhcmtUZXh0U2Vjb25kYXJ5LFxyXG4gICAgICAgICAgICBmb250U2l6ZTogJzAuODc1cmVtJ1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfSxcclxuICAgIE11aU91dGxpbmVkSW5wdXQ6IHtcclxuICAgICAgc3R5bGVPdmVycmlkZXM6IHtcclxuICAgICAgICByb290OiB7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kOiBiZ0NvbG9yLFxyXG4gICAgICAgICAgYm9yZGVyUmFkaXVzOiBgJHt0aGVtZT8uY3VzdG9taXphdGlvbj8uYm9yZGVyUmFkaXVzfXB4YCxcclxuICAgICAgICAgICcmIC5NdWlPdXRsaW5lZElucHV0LW5vdGNoZWRPdXRsaW5lJzoge1xyXG4gICAgICAgICAgICBib3JkZXJDb2xvcjogdGhlbWUuY29sb3JzPy5ncmV5NDAwXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAgJyY6aG92ZXIgJG5vdGNoZWRPdXRsaW5lJzoge1xyXG4gICAgICAgICAgICBib3JkZXJDb2xvcjogdGhlbWUuY29sb3JzPy5wcmltYXJ5TGlnaHRcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICAnJi5NdWlJbnB1dEJhc2UtbXVsdGlsaW5lJzoge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAxXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBpbnB1dDoge1xyXG4gICAgICAgICAgZm9udFdlaWdodDogNTAwLFxyXG4gICAgICAgICAgYmFja2dyb3VuZDogYmdDb2xvcixcclxuICAgICAgICAgIHBhZGRpbmc6ICcxNS41cHggMTRweCcsXHJcbiAgICAgICAgICBib3JkZXJSYWRpdXM6IGAke3RoZW1lPy5jdXN0b21pemF0aW9uPy5ib3JkZXJSYWRpdXN9cHhgLFxyXG4gICAgICAgICAgJyYuTXVpSW5wdXRCYXNlLWlucHV0U2l6ZVNtYWxsJzoge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAnMTBweCAxNHB4JyxcclxuICAgICAgICAgICAgJyYuTXVpSW5wdXRCYXNlLWlucHV0QWRvcm5lZFN0YXJ0Jzoge1xyXG4gICAgICAgICAgICAgIHBhZGRpbmdMZWZ0OiAwXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIGlucHV0QWRvcm5lZFN0YXJ0OiB7XHJcbiAgICAgICAgICBwYWRkaW5nTGVmdDogNFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgbm90Y2hlZE91dGxpbmU6IHtcclxuICAgICAgICAgIGJvcmRlclJhZGl1czogYCR7dGhlbWU/LmN1c3RvbWl6YXRpb24/LmJvcmRlclJhZGl1c31weGBcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0sXHJcbiAgICBNdWlTbGlkZXI6IHtcclxuICAgICAgc3R5bGVPdmVycmlkZXM6IHtcclxuICAgICAgICByb290OiB7XHJcbiAgICAgICAgICAnJi5NdWktZGlzYWJsZWQnOiB7XHJcbiAgICAgICAgICAgIGNvbG9yOiB0aGVtZS5jb2xvcnM/LmdyZXkzMDBcclxuICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIG1hcms6IHtcclxuICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUucGFwZXIsXHJcbiAgICAgICAgICB3aWR0aDogJzRweCdcclxuICAgICAgICB9LFxyXG4gICAgICAgIHZhbHVlTGFiZWw6IHtcclxuICAgICAgICAgIGNvbG9yOiB0aGVtZT8uY29sb3JzPy5wcmltYXJ5TGlnaHRcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0sXHJcbiAgICBNdWlEaXZpZGVyOiB7XHJcbiAgICAgIHN0eWxlT3ZlcnJpZGVzOiB7XHJcbiAgICAgICAgcm9vdDoge1xyXG4gICAgICAgICAgYm9yZGVyQ29sb3I6IHRoZW1lLmRpdmlkZXIsXHJcbiAgICAgICAgICBvcGFjaXR5OiAxXHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gICAgTXVpQXZhdGFyOiB7XHJcbiAgICAgIHN0eWxlT3ZlcnJpZGVzOiB7XHJcbiAgICAgICAgcm9vdDoge1xyXG4gICAgICAgICAgY29sb3I6IHRoZW1lLmNvbG9ycz8ucHJpbWFyeURhcmssXHJcbiAgICAgICAgICBiYWNrZ3JvdW5kOiB0aGVtZS5jb2xvcnM/LnByaW1hcnkyMDBcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0sXHJcbiAgICBNdWlDaGlwOiB7XHJcbiAgICAgIHN0eWxlT3ZlcnJpZGVzOiB7XHJcbiAgICAgICAgcm9vdDoge1xyXG4gICAgICAgICAgJyYuTXVpQ2hpcC1kZWxldGFibGUgLk11aUNoaXAtZGVsZXRlSWNvbic6IHtcclxuICAgICAgICAgICAgY29sb3I6ICdpbmhlcml0J1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfSxcclxuICAgIE11aVRvb2x0aXA6IHtcclxuICAgICAgc3R5bGVPdmVycmlkZXM6IHtcclxuICAgICAgICB0b29sdGlwOiB7XHJcbiAgICAgICAgICBjb2xvcjogdGhlbWUucGFwZXIsXHJcbiAgICAgICAgICBiYWNrZ3JvdW5kOiB0aGVtZS5jb2xvcnM/LmdyZXk3MDBcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9O1xyXG59XHJcbiJdLCJuYW1lcyI6WyJjb21wb25lbnRTdHlsZU92ZXJyaWRlcyIsInRoZW1lIiwiYmdDb2xvciIsImNvbG9ycyIsImdyZXk1MCIsIk11aUJ1dHRvbiIsInN0eWxlT3ZlcnJpZGVzIiwicm9vdCIsImZvbnRXZWlnaHQiLCJib3JkZXJSYWRpdXMiLCJNdWlQYXBlciIsImRlZmF1bHRQcm9wcyIsImVsZXZhdGlvbiIsImJhY2tncm91bmRJbWFnZSIsInJvdW5kZWQiLCJjdXN0b21pemF0aW9uIiwiTXVpQ2FyZEhlYWRlciIsImNvbG9yIiwidGV4dERhcmsiLCJwYWRkaW5nIiwidGl0bGUiLCJmb250U2l6ZSIsIk11aUNhcmRDb250ZW50IiwiTXVpQ2FyZEFjdGlvbnMiLCJNdWlMaXN0SXRlbUJ1dHRvbiIsImRhcmtUZXh0UHJpbWFyeSIsInBhZGRpbmdUb3AiLCJwYWRkaW5nQm90dG9tIiwibWVudVNlbGVjdGVkIiwiYmFja2dyb3VuZENvbG9yIiwibWVudVNlbGVjdGVkQmFjayIsIk11aUxpc3RJdGVtSWNvbiIsIm1pbldpZHRoIiwiTXVpTGlzdEl0ZW1UZXh0IiwicHJpbWFyeSIsIk11aUlucHV0QmFzZSIsImlucHV0IiwiZGFya1RleHRTZWNvbmRhcnkiLCJNdWlPdXRsaW5lZElucHV0IiwiYmFja2dyb3VuZCIsImJvcmRlckNvbG9yIiwiZ3JleTQwMCIsInByaW1hcnlMaWdodCIsInBhZGRpbmdMZWZ0IiwiaW5wdXRBZG9ybmVkU3RhcnQiLCJub3RjaGVkT3V0bGluZSIsIk11aVNsaWRlciIsImdyZXkzMDAiLCJtYXJrIiwicGFwZXIiLCJ3aWR0aCIsInZhbHVlTGFiZWwiLCJNdWlEaXZpZGVyIiwiZGl2aWRlciIsIm9wYWNpdHkiLCJNdWlBdmF0YXIiLCJwcmltYXJ5RGFyayIsInByaW1hcnkyMDAiLCJNdWlDaGlwIiwiTXVpVG9vbHRpcCIsInRvb2x0aXAiLCJncmV5NzAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./styles/themes/compStyleOverride.js\n");/***/},/***/"./styles/themes/index.js":/*!********************************!*\
  !*** ./styles/themes/index.js ***!
  \********************************/ /***/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";cov_5y9y4rzfh().f[7]++;cov_5y9y4rzfh().s[35]++;cov_1q72jli5gt().f[5]++;cov_5y9y4rzfh().s[36]++;cov_1q72jli5gt().s[9]++;cov_5y9y4rzfh().s[37]++;eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"theme\": () => (/* binding */ theme)\n/* harmony export */ });\n/* harmony import */ var _mui_material_styles__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @mui/material/styles */ \"@mui/material/styles\");\n/* harmony import */ var _mui_material_styles__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mui_material_styles__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _scss_themes_vars_module_scss__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../scss/_themes-vars.module.scss */ \"./styles/scss/_themes-vars.module.scss\");\n/* harmony import */ var _scss_themes_vars_module_scss__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_scss_themes_vars_module_scss__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _compStyleOverride__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./compStyleOverride */ \"./styles/themes/compStyleOverride.js\");\n/* harmony import */ var _palette__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./palette */ \"./styles/themes/palette.js\");\n/* harmony import */ var _typography__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./typography */ \"./styles/themes/typography.js\");\nfunction cov_1m8xn3x5im() {\n  var path = \"C:\\\\Users\\\\nathn\\\\Desktop\\\\final project\\\\admin-next-app\\\\styles\\\\themes\\\\index.js\";\n  var hash = \"0d23181803eebe0d7210da7beb76a01ae94d56b7\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"C:\\\\Users\\\\nathn\\\\Desktop\\\\final project\\\\admin-next-app\\\\styles\\\\themes\\\\index.js\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 16,\n          column: 21\n        },\n        end: {\n          line: 53,\n          column: 1\n        }\n      },\n      \"1\": {\n        start: {\n          line: 17,\n          column: 16\n        },\n        end: {\n          line: 17,\n          column: 22\n        }\n      },\n      \"2\": {\n        start: {\n          line: 19,\n          column: 22\n        },\n        end: {\n          line: 32,\n          column: 3\n        }\n      },\n      \"3\": {\n        start: {\n          line: 34,\n          column: 23\n        },\n        end: {\n          line: 47,\n          column: 3\n        }\n      },\n      \"4\": {\n        start: {\n          line: 49,\n          column: 17\n        },\n        end: {\n          line: 49,\n          column: 42\n        }\n      },\n      \"5\": {\n        start: {\n          line: 50,\n          column: 2\n        },\n        end: {\n          line: 50,\n          column: 59\n        }\n      },\n      \"6\": {\n        start: {\n          line: 52,\n          column: 2\n        },\n        end: {\n          line: 52,\n          column: 16\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 16,\n            column: 21\n          },\n          end: {\n            line: 16,\n            column: 22\n          }\n        },\n        loc: {\n          start: {\n            line: 16,\n            column: 40\n          },\n          end: {\n            line: 53,\n            column: 1\n          }\n        },\n        line: 16\n      }\n    },\n    branchMap: {},\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0\n    },\n    f: {\n      \"0\": 0\n    },\n    b: {},\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"0d23181803eebe0d7210da7beb76a01ae94d56b7\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_1m8xn3x5im = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_1m8xn3x5im();\n // assets\n\n // project imports\n\n\n\n\n/**\r\n * Represent theme style and structure as per Material-UI\r\n * @param {JsonObject} customization customization parameter object\r\n */\n\ncov_1m8xn3x5im().s[0]++;\nconst theme = customization => {\n  cov_1m8xn3x5im().f[0]++;\n  const color = (cov_1m8xn3x5im().s[1]++, (_scss_themes_vars_module_scss__WEBPACK_IMPORTED_MODULE_4___default()));\n  const themeOption = (cov_1m8xn3x5im().s[2]++, {\n    colors: color,\n    heading: color.grey900,\n    paper: color.paper,\n    backgroundDefault: color.paper,\n    background: color.primaryLight,\n    darkTextPrimary: color.grey700,\n    darkTextSecondary: color.grey500,\n    textDark: color.grey900,\n    menuSelected: color.secondaryDark,\n    menuSelectedBack: color.secondaryLight,\n    divider: color.grey200,\n    customization\n  });\n  const themeOptions = (cov_1m8xn3x5im().s[3]++, {\n    direction: 'ltr',\n    palette: (0,_palette__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(themeOption),\n    mixins: {\n      toolbar: {\n        minHeight: '48px',\n        padding: '16px',\n        '@media (min-width: 600px)': {\n          minHeight: '48px'\n        }\n      }\n    },\n    typography: (0,_typography__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(themeOption)\n  });\n  const themes = (cov_1m8xn3x5im().s[4]++, (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_0__.createTheme)(themeOptions));\n  cov_1m8xn3x5im().s[5]++;\n  themes.components = (0,_compStyleOverride__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(themeOption);\n  cov_1m8xn3x5im().s[6]++;\n  return themes;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (theme);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdHlsZXMvdGhlbWVzL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFlWTs7Ozs7Ozs7O0NBYlo7O0NBR0E7O0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7OztBQUVPLE1BQU1LLEtBQUssR0FBSUMsYUFBRCxJQUFtQjtBQUFBO0FBQ3RDLFFBQU1DLEtBQUssNkJBQUdOLHNFQUFILENBQVg7QUFFQSxRQUFNTyxXQUFXLDZCQUFHO0FBQ2xCUCxJQUFBQSxNQUFNLEVBQUVNLEtBRFU7QUFFbEJFLElBQUFBLE9BQU8sRUFBRUYsS0FBSyxDQUFDRyxPQUZHO0FBR2xCQyxJQUFBQSxLQUFLLEVBQUVKLEtBQUssQ0FBQ0ksS0FISztBQUlsQkMsSUFBQUEsaUJBQWlCLEVBQUVMLEtBQUssQ0FBQ0ksS0FKUDtBQUtsQkUsSUFBQUEsVUFBVSxFQUFFTixLQUFLLENBQUNPLFlBTEE7QUFNbEJDLElBQUFBLGVBQWUsRUFBRVIsS0FBSyxDQUFDUyxPQU5MO0FBT2xCQyxJQUFBQSxpQkFBaUIsRUFBRVYsS0FBSyxDQUFDVyxPQVBQO0FBUWxCQyxJQUFBQSxRQUFRLEVBQUVaLEtBQUssQ0FBQ0csT0FSRTtBQVNsQlUsSUFBQUEsWUFBWSxFQUFFYixLQUFLLENBQUNjLGFBVEY7QUFVbEJDLElBQUFBLGdCQUFnQixFQUFFZixLQUFLLENBQUNnQixjQVZOO0FBV2xCQyxJQUFBQSxPQUFPLEVBQUVqQixLQUFLLENBQUNrQixPQVhHO0FBWWxCbkIsSUFBQUE7QUFaa0IsR0FBSCxDQUFqQjtBQWVBLFFBQU1vQixZQUFZLDZCQUFHO0FBQ25CQyxJQUFBQSxTQUFTLEVBQUUsS0FEUTtBQUVuQkMsSUFBQUEsT0FBTyxFQUFFekIsb0RBQVksQ0FBQ0ssV0FBRCxDQUZGO0FBR25CcUIsSUFBQUEsTUFBTSxFQUFFO0FBQ05DLE1BQUFBLE9BQU8sRUFBRTtBQUNQQyxRQUFBQSxTQUFTLEVBQUUsTUFESjtBQUVQQyxRQUFBQSxPQUFPLEVBQUUsTUFGRjtBQUdQLHFDQUE2QjtBQUMzQkQsVUFBQUEsU0FBUyxFQUFFO0FBRGdCO0FBSHRCO0FBREgsS0FIVztBQVluQkUsSUFBQUEsVUFBVSxFQUFFN0IsdURBQWUsQ0FBQ0ksV0FBRDtBQVpSLEdBQUgsQ0FBbEI7QUFlQSxRQUFNMEIsTUFBTSw2QkFBR2xDLGlFQUFXLENBQUMwQixZQUFELENBQWQsQ0FBWjtBQWpDc0M7QUFrQ3RDUSxFQUFBQSxNQUFNLENBQUNDLFVBQVAsR0FBb0JqQyw4REFBdUIsQ0FBQ00sV0FBRCxDQUEzQztBQWxDc0M7QUFvQ3RDLFNBQU8wQixNQUFQO0FBQ0QsQ0FyQ007QUF1Q1AsaUVBQWU3QixLQUFmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWRtaW4tbmV4dC1hcHAvLi9zdHlsZXMvdGhlbWVzL2luZGV4LmpzPzNmNWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtjcmVhdGVUaGVtZX0gZnJvbSAnQG11aS9tYXRlcmlhbC9zdHlsZXMnO1xyXG5cclxuLy8gYXNzZXRzXHJcbmltcG9ydCBjb2xvcnMgZnJvbSAnLi4vc2Nzcy9fdGhlbWVzLXZhcnMubW9kdWxlLnNjc3MnO1xyXG5cclxuLy8gcHJvamVjdCBpbXBvcnRzXHJcbmltcG9ydCBjb21wb25lbnRTdHlsZU92ZXJyaWRlcyBmcm9tICcuL2NvbXBTdHlsZU92ZXJyaWRlJztcclxuaW1wb3J0IHRoZW1lUGFsZXR0ZSBmcm9tICcuL3BhbGV0dGUnO1xyXG5pbXBvcnQgdGhlbWVUeXBvZ3JhcGh5IGZyb20gJy4vdHlwb2dyYXBoeSc7XHJcblxyXG4vKipcclxuICogUmVwcmVzZW50IHRoZW1lIHN0eWxlIGFuZCBzdHJ1Y3R1cmUgYXMgcGVyIE1hdGVyaWFsLVVJXHJcbiAqIEBwYXJhbSB7SnNvbk9iamVjdH0gY3VzdG9taXphdGlvbiBjdXN0b21pemF0aW9uIHBhcmFtZXRlciBvYmplY3RcclxuICovXHJcblxyXG5leHBvcnQgY29uc3QgdGhlbWUgPSAoY3VzdG9taXphdGlvbikgPT4ge1xyXG4gIGNvbnN0IGNvbG9yID0gY29sb3JzO1xyXG5cclxuICBjb25zdCB0aGVtZU9wdGlvbiA9IHtcclxuICAgIGNvbG9yczogY29sb3IsXHJcbiAgICBoZWFkaW5nOiBjb2xvci5ncmV5OTAwLFxyXG4gICAgcGFwZXI6IGNvbG9yLnBhcGVyLFxyXG4gICAgYmFja2dyb3VuZERlZmF1bHQ6IGNvbG9yLnBhcGVyLFxyXG4gICAgYmFja2dyb3VuZDogY29sb3IucHJpbWFyeUxpZ2h0LFxyXG4gICAgZGFya1RleHRQcmltYXJ5OiBjb2xvci5ncmV5NzAwLFxyXG4gICAgZGFya1RleHRTZWNvbmRhcnk6IGNvbG9yLmdyZXk1MDAsXHJcbiAgICB0ZXh0RGFyazogY29sb3IuZ3JleTkwMCxcclxuICAgIG1lbnVTZWxlY3RlZDogY29sb3Iuc2Vjb25kYXJ5RGFyayxcclxuICAgIG1lbnVTZWxlY3RlZEJhY2s6IGNvbG9yLnNlY29uZGFyeUxpZ2h0LFxyXG4gICAgZGl2aWRlcjogY29sb3IuZ3JleTIwMCxcclxuICAgIGN1c3RvbWl6YXRpb25cclxuICB9O1xyXG5cclxuICBjb25zdCB0aGVtZU9wdGlvbnMgPSB7XHJcbiAgICBkaXJlY3Rpb246ICdsdHInLFxyXG4gICAgcGFsZXR0ZTogdGhlbWVQYWxldHRlKHRoZW1lT3B0aW9uKSxcclxuICAgIG1peGluczoge1xyXG4gICAgICB0b29sYmFyOiB7XHJcbiAgICAgICAgbWluSGVpZ2h0OiAnNDhweCcsXHJcbiAgICAgICAgcGFkZGluZzogJzE2cHgnLFxyXG4gICAgICAgICdAbWVkaWEgKG1pbi13aWR0aDogNjAwcHgpJzoge1xyXG4gICAgICAgICAgbWluSGVpZ2h0OiAnNDhweCdcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0sXHJcbiAgICB0eXBvZ3JhcGh5OiB0aGVtZVR5cG9ncmFwaHkodGhlbWVPcHRpb24pXHJcbiAgfTtcclxuXHJcbiAgY29uc3QgdGhlbWVzID0gY3JlYXRlVGhlbWUodGhlbWVPcHRpb25zKTtcclxuICB0aGVtZXMuY29tcG9uZW50cyA9IGNvbXBvbmVudFN0eWxlT3ZlcnJpZGVzKHRoZW1lT3B0aW9uKTtcclxuXHJcbiAgcmV0dXJuIHRoZW1lcztcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHRoZW1lO1xyXG4iXSwibmFtZXMiOlsiY3JlYXRlVGhlbWUiLCJjb2xvcnMiLCJjb21wb25lbnRTdHlsZU92ZXJyaWRlcyIsInRoZW1lUGFsZXR0ZSIsInRoZW1lVHlwb2dyYXBoeSIsInRoZW1lIiwiY3VzdG9taXphdGlvbiIsImNvbG9yIiwidGhlbWVPcHRpb24iLCJoZWFkaW5nIiwiZ3JleTkwMCIsInBhcGVyIiwiYmFja2dyb3VuZERlZmF1bHQiLCJiYWNrZ3JvdW5kIiwicHJpbWFyeUxpZ2h0IiwiZGFya1RleHRQcmltYXJ5IiwiZ3JleTcwMCIsImRhcmtUZXh0U2Vjb25kYXJ5IiwiZ3JleTUwMCIsInRleHREYXJrIiwibWVudVNlbGVjdGVkIiwic2Vjb25kYXJ5RGFyayIsIm1lbnVTZWxlY3RlZEJhY2siLCJzZWNvbmRhcnlMaWdodCIsImRpdmlkZXIiLCJncmV5MjAwIiwidGhlbWVPcHRpb25zIiwiZGlyZWN0aW9uIiwicGFsZXR0ZSIsIm1peGlucyIsInRvb2xiYXIiLCJtaW5IZWlnaHQiLCJwYWRkaW5nIiwidHlwb2dyYXBoeSIsInRoZW1lcyIsImNvbXBvbmVudHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./styles/themes/index.js\n");/***/},/***/"./styles/themes/palette.js":/*!**********************************!*\
  !*** ./styles/themes/palette.js ***!
  \**********************************/ /***/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";cov_5y9y4rzfh().f[8]++;cov_5y9y4rzfh().s[38]++;cov_1q72jli5gt().f[6]++;cov_5y9y4rzfh().s[39]++;cov_1q72jli5gt().s[10]++;cov_5y9y4rzfh().s[40]++;eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ themePalette)\n/* harmony export */ });\nfunction cov_68lzzf8ks() {\n  var path = \"C:\\\\Users\\\\nathn\\\\Desktop\\\\final project\\\\admin-next-app\\\\styles\\\\themes\\\\palette.js\";\n  var hash = \"e48784bdcb77daca9e91e01f87ceb5f7ed5e0839\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"C:\\\\Users\\\\nathn\\\\Desktop\\\\final project\\\\admin-next-app\\\\styles\\\\themes\\\\palette.js\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 7,\n          column: 2\n        },\n        end: {\n          line: 72,\n          column: 4\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"themePalette\",\n        decl: {\n          start: {\n            line: 6,\n            column: 24\n          },\n          end: {\n            line: 6,\n            column: 36\n          }\n        },\n        loc: {\n          start: {\n            line: 6,\n            column: 44\n          },\n          end: {\n            line: 73,\n            column: 1\n          }\n        },\n        line: 6\n      }\n    },\n    branchMap: {},\n    s: {\n      \"0\": 0\n    },\n    f: {\n      \"0\": 0\n    },\n    b: {},\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"e48784bdcb77daca9e91e01f87ceb5f7ed5e0839\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_68lzzf8ks = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_68lzzf8ks();\n\n/**\r\n * Color intention that you want to used in your theme\r\n * @param {JsonObject} theme Theme customization object\r\n */\nfunction themePalette(theme) {\n  var _theme$customization, _theme$colors, _theme$colors2, _theme$colors3, _theme$colors4, _theme$colors5, _theme$colors6, _theme$colors7, _theme$colors8, _theme$colors9, _theme$colors10, _theme$colors11, _theme$colors12, _theme$colors13, _theme$colors14, _theme$colors15, _theme$colors16, _theme$colors17, _theme$colors18, _theme$colors19, _theme$colors20, _theme$colors21, _theme$colors22, _theme$colors23, _theme$colors24, _theme$colors25, _theme$colors26, _theme$colors27, _theme$colors28, _theme$colors29, _theme$colors30, _theme$colors31, _theme$colors32;\n\n  cov_68lzzf8ks().f[0]++;\n  cov_68lzzf8ks().s[0]++;\n  return {\n    mode: theme === null || theme === void 0 ? void 0 : (_theme$customization = theme.customization) === null || _theme$customization === void 0 ? void 0 : _theme$customization.navType,\n    common: {\n      black: (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.darkPaper\n    },\n    primary: {\n      light: (_theme$colors2 = theme.colors) === null || _theme$colors2 === void 0 ? void 0 : _theme$colors2.primaryLight,\n      main: (_theme$colors3 = theme.colors) === null || _theme$colors3 === void 0 ? void 0 : _theme$colors3.primaryMain,\n      dark: (_theme$colors4 = theme.colors) === null || _theme$colors4 === void 0 ? void 0 : _theme$colors4.primaryDark,\n      200: (_theme$colors5 = theme.colors) === null || _theme$colors5 === void 0 ? void 0 : _theme$colors5.primary200,\n      800: (_theme$colors6 = theme.colors) === null || _theme$colors6 === void 0 ? void 0 : _theme$colors6.primary800\n    },\n    secondary: {\n      light: (_theme$colors7 = theme.colors) === null || _theme$colors7 === void 0 ? void 0 : _theme$colors7.secondaryLight,\n      main: (_theme$colors8 = theme.colors) === null || _theme$colors8 === void 0 ? void 0 : _theme$colors8.secondaryMain,\n      dark: (_theme$colors9 = theme.colors) === null || _theme$colors9 === void 0 ? void 0 : _theme$colors9.secondaryDark,\n      200: (_theme$colors10 = theme.colors) === null || _theme$colors10 === void 0 ? void 0 : _theme$colors10.secondary200,\n      800: (_theme$colors11 = theme.colors) === null || _theme$colors11 === void 0 ? void 0 : _theme$colors11.secondary800\n    },\n    error: {\n      light: (_theme$colors12 = theme.colors) === null || _theme$colors12 === void 0 ? void 0 : _theme$colors12.errorLight,\n      main: (_theme$colors13 = theme.colors) === null || _theme$colors13 === void 0 ? void 0 : _theme$colors13.errorMain,\n      dark: (_theme$colors14 = theme.colors) === null || _theme$colors14 === void 0 ? void 0 : _theme$colors14.errorDark\n    },\n    orange: {\n      light: (_theme$colors15 = theme.colors) === null || _theme$colors15 === void 0 ? void 0 : _theme$colors15.orangeLight,\n      main: (_theme$colors16 = theme.colors) === null || _theme$colors16 === void 0 ? void 0 : _theme$colors16.orangeMain,\n      dark: (_theme$colors17 = theme.colors) === null || _theme$colors17 === void 0 ? void 0 : _theme$colors17.orangeDark\n    },\n    warning: {\n      light: (_theme$colors18 = theme.colors) === null || _theme$colors18 === void 0 ? void 0 : _theme$colors18.warningLight,\n      main: (_theme$colors19 = theme.colors) === null || _theme$colors19 === void 0 ? void 0 : _theme$colors19.warningMain,\n      dark: (_theme$colors20 = theme.colors) === null || _theme$colors20 === void 0 ? void 0 : _theme$colors20.warningDark\n    },\n    success: {\n      light: (_theme$colors21 = theme.colors) === null || _theme$colors21 === void 0 ? void 0 : _theme$colors21.successLight,\n      200: (_theme$colors22 = theme.colors) === null || _theme$colors22 === void 0 ? void 0 : _theme$colors22.success200,\n      main: (_theme$colors23 = theme.colors) === null || _theme$colors23 === void 0 ? void 0 : _theme$colors23.successMain,\n      dark: (_theme$colors24 = theme.colors) === null || _theme$colors24 === void 0 ? void 0 : _theme$colors24.successDark\n    },\n    grey: {\n      50: (_theme$colors25 = theme.colors) === null || _theme$colors25 === void 0 ? void 0 : _theme$colors25.grey50,\n      100: (_theme$colors26 = theme.colors) === null || _theme$colors26 === void 0 ? void 0 : _theme$colors26.grey100,\n      500: theme.darkTextSecondary,\n      600: theme.heading,\n      700: theme.darkTextPrimary,\n      900: theme.textDark\n    },\n    dark: {\n      light: (_theme$colors27 = theme.colors) === null || _theme$colors27 === void 0 ? void 0 : _theme$colors27.darkTextPrimary,\n      main: (_theme$colors28 = theme.colors) === null || _theme$colors28 === void 0 ? void 0 : _theme$colors28.darkLevel1,\n      dark: (_theme$colors29 = theme.colors) === null || _theme$colors29 === void 0 ? void 0 : _theme$colors29.darkLevel2,\n      800: (_theme$colors30 = theme.colors) === null || _theme$colors30 === void 0 ? void 0 : _theme$colors30.darkBackground,\n      900: (_theme$colors31 = theme.colors) === null || _theme$colors31 === void 0 ? void 0 : _theme$colors31.darkPaper\n    },\n    text: {\n      primary: theme.darkTextPrimary,\n      secondary: theme.darkTextSecondary,\n      dark: theme.textDark,\n      hint: (_theme$colors32 = theme.colors) === null || _theme$colors32 === void 0 ? void 0 : _theme$colors32.grey100\n    },\n    background: {\n      paper: theme.paper,\n      default: theme.backgroundDefault\n    }\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QU8sRUFBRXRELEtBQUssQ0FBQ3VEO0FBRkw7QUE3RFAsR0FBUDtBQWtFRCIsInNvdXJjZXMiOlsid2VicGFjazovL2FkbWluLW5leHQtYXBwLy4vc3R5bGVzL3RoZW1lcy9wYWxldHRlLmpzPzhlMDEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENvbG9yIGludGVudGlvbiB0aGF0IHlvdSB3YW50IHRvIHVzZWQgaW4geW91ciB0aGVtZVxyXG4gKiBAcGFyYW0ge0pzb25PYmplY3R9IHRoZW1lIFRoZW1lIGN1c3RvbWl6YXRpb24gb2JqZWN0XHJcbiAqL1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdGhlbWVQYWxldHRlKHRoZW1lKSB7XHJcbiAgcmV0dXJuIHtcclxuICAgIG1vZGU6IHRoZW1lPy5jdXN0b21pemF0aW9uPy5uYXZUeXBlLFxyXG4gICAgY29tbW9uOiB7XHJcbiAgICAgIGJsYWNrOiB0aGVtZS5jb2xvcnM/LmRhcmtQYXBlclxyXG4gICAgfSxcclxuICAgIHByaW1hcnk6IHtcclxuICAgICAgbGlnaHQ6IHRoZW1lLmNvbG9ycz8ucHJpbWFyeUxpZ2h0LFxyXG4gICAgICBtYWluOiB0aGVtZS5jb2xvcnM/LnByaW1hcnlNYWluLFxyXG4gICAgICBkYXJrOiB0aGVtZS5jb2xvcnM/LnByaW1hcnlEYXJrLFxyXG4gICAgICAyMDA6IHRoZW1lLmNvbG9ycz8ucHJpbWFyeTIwMCxcclxuICAgICAgODAwOiB0aGVtZS5jb2xvcnM/LnByaW1hcnk4MDBcclxuICAgIH0sXHJcbiAgICBzZWNvbmRhcnk6IHtcclxuICAgICAgbGlnaHQ6IHRoZW1lLmNvbG9ycz8uc2Vjb25kYXJ5TGlnaHQsXHJcbiAgICAgIG1haW46IHRoZW1lLmNvbG9ycz8uc2Vjb25kYXJ5TWFpbixcclxuICAgICAgZGFyazogdGhlbWUuY29sb3JzPy5zZWNvbmRhcnlEYXJrLFxyXG4gICAgICAyMDA6IHRoZW1lLmNvbG9ycz8uc2Vjb25kYXJ5MjAwLFxyXG4gICAgICA4MDA6IHRoZW1lLmNvbG9ycz8uc2Vjb25kYXJ5ODAwXHJcbiAgICB9LFxyXG4gICAgZXJyb3I6IHtcclxuICAgICAgbGlnaHQ6IHRoZW1lLmNvbG9ycz8uZXJyb3JMaWdodCxcclxuICAgICAgbWFpbjogdGhlbWUuY29sb3JzPy5lcnJvck1haW4sXHJcbiAgICAgIGRhcms6IHRoZW1lLmNvbG9ycz8uZXJyb3JEYXJrXHJcbiAgICB9LFxyXG4gICAgb3JhbmdlOiB7XHJcbiAgICAgIGxpZ2h0OiB0aGVtZS5jb2xvcnM/Lm9yYW5nZUxpZ2h0LFxyXG4gICAgICBtYWluOiB0aGVtZS5jb2xvcnM/Lm9yYW5nZU1haW4sXHJcbiAgICAgIGRhcms6IHRoZW1lLmNvbG9ycz8ub3JhbmdlRGFya1xyXG4gICAgfSxcclxuICAgIHdhcm5pbmc6IHtcclxuICAgICAgbGlnaHQ6IHRoZW1lLmNvbG9ycz8ud2FybmluZ0xpZ2h0LFxyXG4gICAgICBtYWluOiB0aGVtZS5jb2xvcnM/Lndhcm5pbmdNYWluLFxyXG4gICAgICBkYXJrOiB0aGVtZS5jb2xvcnM/Lndhcm5pbmdEYXJrXHJcbiAgICB9LFxyXG4gICAgc3VjY2Vzczoge1xyXG4gICAgICBsaWdodDogdGhlbWUuY29sb3JzPy5zdWNjZXNzTGlnaHQsXHJcbiAgICAgIDIwMDogdGhlbWUuY29sb3JzPy5zdWNjZXNzMjAwLFxyXG4gICAgICBtYWluOiB0aGVtZS5jb2xvcnM/LnN1Y2Nlc3NNYWluLFxyXG4gICAgICBkYXJrOiB0aGVtZS5jb2xvcnM/LnN1Y2Nlc3NEYXJrXHJcbiAgICB9LFxyXG4gICAgZ3JleToge1xyXG4gICAgICA1MDogdGhlbWUuY29sb3JzPy5ncmV5NTAsXHJcbiAgICAgIDEwMDogdGhlbWUuY29sb3JzPy5ncmV5MTAwLFxyXG4gICAgICA1MDA6IHRoZW1lLmRhcmtUZXh0U2Vjb25kYXJ5LFxyXG4gICAgICA2MDA6IHRoZW1lLmhlYWRpbmcsXHJcbiAgICAgIDcwMDogdGhlbWUuZGFya1RleHRQcmltYXJ5LFxyXG4gICAgICA5MDA6IHRoZW1lLnRleHREYXJrXHJcbiAgICB9LFxyXG4gICAgZGFyazoge1xyXG4gICAgICBsaWdodDogdGhlbWUuY29sb3JzPy5kYXJrVGV4dFByaW1hcnksXHJcbiAgICAgIG1haW46IHRoZW1lLmNvbG9ycz8uZGFya0xldmVsMSxcclxuICAgICAgZGFyazogdGhlbWUuY29sb3JzPy5kYXJrTGV2ZWwyLFxyXG4gICAgICA4MDA6IHRoZW1lLmNvbG9ycz8uZGFya0JhY2tncm91bmQsXHJcbiAgICAgIDkwMDogdGhlbWUuY29sb3JzPy5kYXJrUGFwZXJcclxuICAgIH0sXHJcbiAgICB0ZXh0OiB7XHJcbiAgICAgIHByaW1hcnk6IHRoZW1lLmRhcmtUZXh0UHJpbWFyeSxcclxuICAgICAgc2Vjb25kYXJ5OiB0aGVtZS5kYXJrVGV4dFNlY29uZGFyeSxcclxuICAgICAgZGFyazogdGhlbWUudGV4dERhcmssXHJcbiAgICAgIGhpbnQ6IHRoZW1lLmNvbG9ycz8uZ3JleTEwMFxyXG4gICAgfSxcclxuICAgIGJhY2tncm91bmQ6IHtcclxuICAgICAgcGFwZXI6IHRoZW1lLnBhcGVyLFxyXG4gICAgICBkZWZhdWx0OiB0aGVtZS5iYWNrZ3JvdW5kRGVmYXVsdFxyXG4gICAgfVxyXG4gIH07XHJcbn1cclxuIl0sIm5hbWVzIjpbInRoZW1lUGFsZXR0ZSIsInRoZW1lIiwibW9kZSIsImN1c3RvbWl6YXRpb24iLCJuYXZUeXBlIiwiY29tbW9uIiwiYmxhY2siLCJjb2xvcnMiLCJkYXJrUGFwZXIiLCJwcmltYXJ5IiwibGlnaHQiLCJwcmltYXJ5TGlnaHQiLCJtYWluIiwicHJpbWFyeU1haW4iLCJkYXJrIiwicHJpbWFyeURhcmsiLCJwcmltYXJ5MjAwIiwicHJpbWFyeTgwMCIsInNlY29uZGFyeSIsInNlY29uZGFyeUxpZ2h0Iiwic2Vjb25kYXJ5TWFpbiIsInNlY29uZGFyeURhcmsiLCJzZWNvbmRhcnkyMDAiLCJzZWNvbmRhcnk4MDAiLCJlcnJvciIsImVycm9yTGlnaHQiLCJlcnJvck1haW4iLCJlcnJvckRhcmsiLCJvcmFuZ2UiLCJvcmFuZ2VMaWdodCIsIm9yYW5nZU1haW4iLCJvcmFuZ2VEYXJrIiwid2FybmluZyIsIndhcm5pbmdMaWdodCIsIndhcm5pbmdNYWluIiwid2FybmluZ0RhcmsiLCJzdWNjZXNzIiwic3VjY2Vzc0xpZ2h0Iiwic3VjY2VzczIwMCIsInN1Y2Nlc3NNYWluIiwic3VjY2Vzc0RhcmsiLCJncmV5IiwiZ3JleTUwIiwiZ3JleTEwMCIsImRhcmtUZXh0U2Vjb25kYXJ5IiwiaGVhZGluZyIsImRhcmtUZXh0UHJpbWFyeSIsInRleHREYXJrIiwiZGFya0xldmVsMSIsImRhcmtMZXZlbDIiLCJkYXJrQmFja2dyb3VuZCIsInRleHQiLCJoaW50IiwiYmFja2dyb3VuZCIsInBhcGVyIiwiZGVmYXVsdCIsImJhY2tncm91bmREZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./styles/themes/palette.js\n");/***/},/***/"./styles/themes/typography.js":/*!*************************************!*\
  !*** ./styles/themes/typography.js ***!
  \*************************************/ /***/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";cov_5y9y4rzfh().f[9]++;cov_5y9y4rzfh().s[41]++;cov_1q72jli5gt().f[7]++;cov_5y9y4rzfh().s[42]++;cov_1q72jli5gt().s[11]++;cov_5y9y4rzfh().s[43]++;eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ themeTypography)\n/* harmony export */ });\nfunction cov_1ma2672d0l() {\n  var path = \"C:\\\\Users\\\\nathn\\\\Desktop\\\\final project\\\\admin-next-app\\\\styles\\\\themes\\\\typography.js\";\n  var hash = \"37182d6c42b41b17d0bfae5c4d2c40afb202a870\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"C:\\\\Users\\\\nathn\\\\Desktop\\\\final project\\\\admin-next-app\\\\styles\\\\themes\\\\typography.js\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 7,\n          column: 2\n        },\n        end: {\n          line: 132,\n          column: 4\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"themeTypography\",\n        decl: {\n          start: {\n            line: 6,\n            column: 24\n          },\n          end: {\n            line: 6,\n            column: 39\n          }\n        },\n        loc: {\n          start: {\n            line: 6,\n            column: 47\n          },\n          end: {\n            line: 133,\n            column: 1\n          }\n        },\n        line: 6\n      }\n    },\n    branchMap: {},\n    s: {\n      \"0\": 0\n    },\n    f: {\n      \"0\": 0\n    },\n    b: {},\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"37182d6c42b41b17d0bfae5c4d2c40afb202a870\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_1ma2672d0l = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_1ma2672d0l();\n\n/**\r\n * Typography used in theme\r\n * @param {JsonObject} theme theme customization object\r\n */\nfunction themeTypography(theme) {\n  var _theme$customization, _theme$customization2;\n\n  cov_1ma2672d0l().f[0]++;\n  cov_1ma2672d0l().s[0]++;\n  return {\n    fontFamily: theme === null || theme === void 0 ? void 0 : (_theme$customization = theme.customization) === null || _theme$customization === void 0 ? void 0 : _theme$customization.fontFamily,\n    h6: {\n      fontWeight: 500,\n      color: theme.heading,\n      fontSize: '0.75rem'\n    },\n    h5: {\n      fontSize: '0.875rem',\n      color: theme.heading,\n      fontWeight: 500\n    },\n    h4: {\n      fontSize: '1rem',\n      color: theme.heading,\n      fontWeight: 600\n    },\n    h3: {\n      fontSize: '1.25rem',\n      color: theme.heading,\n      fontWeight: 600\n    },\n    h2: {\n      fontSize: '1.5rem',\n      color: theme.heading,\n      fontWeight: 700\n    },\n    h1: {\n      fontSize: '2.125rem',\n      color: theme.heading,\n      fontWeight: 700\n    },\n    subtitle1: {\n      fontSize: '0.875rem',\n      fontWeight: 500,\n      color: theme.textDark\n    },\n    subtitle2: {\n      fontSize: '0.75rem',\n      fontWeight: 400,\n      color: theme.darkTextSecondary\n    },\n    caption: {\n      fontSize: '0.75rem',\n      color: theme.darkTextSecondary,\n      fontWeight: 400\n    },\n    body1: {\n      fontSize: '0.875rem',\n      fontWeight: 400,\n      lineHeight: '1.334em'\n    },\n    body2: {\n      letterSpacing: '0em',\n      fontWeight: 400,\n      lineHeight: '1.5em',\n      color: theme.darkTextPrimary\n    },\n    button: {\n      textTransform: 'capitalize'\n    },\n    customInput: {\n      marginTop: 1,\n      marginBottom: 1,\n      '& > label': {\n        top: 23,\n        left: 0,\n        color: theme.grey500,\n        '&[data-shrink=\"false\"]': {\n          top: 5\n        }\n      },\n      '& > div > input': {\n        padding: '30.5px 14px 11.5px !important'\n      },\n      '& legend': {\n        display: 'none'\n      },\n      '& fieldset': {\n        top: 0\n      }\n    },\n    mainContent: {\n      backgroundColor: theme.background,\n      width: '100%',\n      minHeight: 'calc(100vh - 88px)',\n      flexGrow: 1,\n      padding: '20px',\n      marginTop: '88px',\n      marginRight: '20px',\n      borderRadius: `${theme === null || theme === void 0 ? void 0 : (_theme$customization2 = theme.customization) === null || _theme$customization2 === void 0 ? void 0 : _theme$customization2.borderRadius}px`\n    },\n    menuCaption: {\n      fontSize: '0.875rem',\n      fontWeight: 500,\n      color: theme.heading,\n      padding: '6px',\n      textTransform: 'capitalize',\n      marginTop: '10px'\n    },\n    subMenuCaption: {\n      fontSize: '0.6875rem',\n      fontWeight: 500,\n      color: theme.darkTextSecondary,\n      textTransform: 'capitalize'\n    },\n    commonAvatar: {\n      cursor: 'pointer',\n      borderRadius: '8px'\n    },\n    smallAvatar: {\n      width: '22px',\n      height: '22px',\n      fontSize: '1rem'\n    },\n    mediumAvatar: {\n      width: '34px',\n      height: '34px',\n      fontSize: '1.2rem'\n    },\n    largeAvatar: {\n      width: '44px',\n      height: '44px',\n      fontSize: '1.5rem'\n    }\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./styles/themes/typography.js\n");/***/},/***/"./styles/scss/_themes-vars.module.scss":/*!**********************************************!*\
  !*** ./styles/scss/_themes-vars.module.scss ***!
  \**********************************************/ /***/module=>{cov_5y9y4rzfh().f[10]++;cov_5y9y4rzfh().s[44]++;cov_1q72jli5gt().f[8]++;cov_5y9y4rzfh().s[45]++;cov_1q72jli5gt().s[12]++;cov_5y9y4rzfh().s[46]++;eval("// Exports\nmodule.exports = {\n\t\"paper\": \"#ffffff\",\n\t\"primaryLight\": \"#e3f2fd\",\n\t\"primary200\": \"#90caf9\",\n\t\"primaryMain\": \"#2196f3\",\n\t\"primaryDark\": \"#1e88e5\",\n\t\"primary800\": \"#1565c0\",\n\t\"secondaryLight\": \"#ede7f6\",\n\t\"secondary200\": \"#b39ddb\",\n\t\"secondaryMain\": \"#673ab7\",\n\t\"secondaryDark\": \"#5e35b1\",\n\t\"secondary800\": \"#4527a0\",\n\t\"successLight\": \"#b9f6ca\",\n\t\"success200\": \"#69f0ae\",\n\t\"successMain\": \"#00e676\",\n\t\"successDark\": \"#00c853\",\n\t\"errorLight\": \"#ef9a9a\",\n\t\"errorMain\": \"#f44336\",\n\t\"errorDark\": \"#c62828\",\n\t\"orangeLight\": \"#fbe9e7\",\n\t\"orangeMain\": \"#ffab91\",\n\t\"orangeDark\": \"#d84315\",\n\t\"warningLight\": \"#fff8e1\",\n\t\"warningMain\": \"#ffe57f\",\n\t\"warningDark\": \"#ffc107\",\n\t\"grey50\": \"#fafafa\",\n\t\"grey100\": \"#f5f5f5\",\n\t\"grey200\": \"#eeeeee\",\n\t\"grey300\": \"#e0e0e0\",\n\t\"grey500\": \"#9e9e9e\",\n\t\"grey600\": \"#757575\",\n\t\"grey700\": \"#616161\",\n\t\"grey900\": \"#212121\",\n\t\"darkPaper\": \"#111936\",\n\t\"darkBackground\": \"#1a223f\",\n\t\"darkLevel1\": \"#29314f\",\n\t\"darkLevel2\": \"#212946\",\n\t\"darkTextTitle\": \"#d7dcec\",\n\t\"darkTextPrimary\": \"#bdc8f0\",\n\t\"darkTextSecondary\": \"#8492c4\",\n\t\"darkPrimaryLight\": \"#e3f2fd\",\n\t\"darkPrimaryMain\": \"#2196f3\",\n\t\"darkPrimaryDark\": \"#1e88e5\",\n\t\"darkPrimary200\": \"#90caf9\",\n\t\"darkPrimary800\": \"#1565c0\",\n\t\"darkSecondaryLight\": \"#d1c4e9\",\n\t\"darkSecondaryMain\": \"#7c4dff\",\n\t\"darkSecondaryDark\": \"#651fff\",\n\t\"darkSecondary200\": \"#b39ddb\",\n\t\"darkSecondary800\": \"#6200ea\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdHlsZXMvc2Nzcy9fdGhlbWVzLXZhcnMubW9kdWxlLnNjc3MuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hZG1pbi1uZXh0LWFwcC8uL3N0eWxlcy9zY3NzL190aGVtZXMtdmFycy5tb2R1bGUuc2Nzcz80YzM3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEV4cG9ydHNcbm1vZHVsZS5leHBvcnRzID0ge1xuXHRcInBhcGVyXCI6IFwiI2ZmZmZmZlwiLFxuXHRcInByaW1hcnlMaWdodFwiOiBcIiNlM2YyZmRcIixcblx0XCJwcmltYXJ5MjAwXCI6IFwiIzkwY2FmOVwiLFxuXHRcInByaW1hcnlNYWluXCI6IFwiIzIxOTZmM1wiLFxuXHRcInByaW1hcnlEYXJrXCI6IFwiIzFlODhlNVwiLFxuXHRcInByaW1hcnk4MDBcIjogXCIjMTU2NWMwXCIsXG5cdFwic2Vjb25kYXJ5TGlnaHRcIjogXCIjZWRlN2Y2XCIsXG5cdFwic2Vjb25kYXJ5MjAwXCI6IFwiI2IzOWRkYlwiLFxuXHRcInNlY29uZGFyeU1haW5cIjogXCIjNjczYWI3XCIsXG5cdFwic2Vjb25kYXJ5RGFya1wiOiBcIiM1ZTM1YjFcIixcblx0XCJzZWNvbmRhcnk4MDBcIjogXCIjNDUyN2EwXCIsXG5cdFwic3VjY2Vzc0xpZ2h0XCI6IFwiI2I5ZjZjYVwiLFxuXHRcInN1Y2Nlc3MyMDBcIjogXCIjNjlmMGFlXCIsXG5cdFwic3VjY2Vzc01haW5cIjogXCIjMDBlNjc2XCIsXG5cdFwic3VjY2Vzc0RhcmtcIjogXCIjMDBjODUzXCIsXG5cdFwiZXJyb3JMaWdodFwiOiBcIiNlZjlhOWFcIixcblx0XCJlcnJvck1haW5cIjogXCIjZjQ0MzM2XCIsXG5cdFwiZXJyb3JEYXJrXCI6IFwiI2M2MjgyOFwiLFxuXHRcIm9yYW5nZUxpZ2h0XCI6IFwiI2ZiZTllN1wiLFxuXHRcIm9yYW5nZU1haW5cIjogXCIjZmZhYjkxXCIsXG5cdFwib3JhbmdlRGFya1wiOiBcIiNkODQzMTVcIixcblx0XCJ3YXJuaW5nTGlnaHRcIjogXCIjZmZmOGUxXCIsXG5cdFwid2FybmluZ01haW5cIjogXCIjZmZlNTdmXCIsXG5cdFwid2FybmluZ0RhcmtcIjogXCIjZmZjMTA3XCIsXG5cdFwiZ3JleTUwXCI6IFwiI2ZhZmFmYVwiLFxuXHRcImdyZXkxMDBcIjogXCIjZjVmNWY1XCIsXG5cdFwiZ3JleTIwMFwiOiBcIiNlZWVlZWVcIixcblx0XCJncmV5MzAwXCI6IFwiI2UwZTBlMFwiLFxuXHRcImdyZXk1MDBcIjogXCIjOWU5ZTllXCIsXG5cdFwiZ3JleTYwMFwiOiBcIiM3NTc1NzVcIixcblx0XCJncmV5NzAwXCI6IFwiIzYxNjE2MVwiLFxuXHRcImdyZXk5MDBcIjogXCIjMjEyMTIxXCIsXG5cdFwiZGFya1BhcGVyXCI6IFwiIzExMTkzNlwiLFxuXHRcImRhcmtCYWNrZ3JvdW5kXCI6IFwiIzFhMjIzZlwiLFxuXHRcImRhcmtMZXZlbDFcIjogXCIjMjkzMTRmXCIsXG5cdFwiZGFya0xldmVsMlwiOiBcIiMyMTI5NDZcIixcblx0XCJkYXJrVGV4dFRpdGxlXCI6IFwiI2Q3ZGNlY1wiLFxuXHRcImRhcmtUZXh0UHJpbWFyeVwiOiBcIiNiZGM4ZjBcIixcblx0XCJkYXJrVGV4dFNlY29uZGFyeVwiOiBcIiM4NDkyYzRcIixcblx0XCJkYXJrUHJpbWFyeUxpZ2h0XCI6IFwiI2UzZjJmZFwiLFxuXHRcImRhcmtQcmltYXJ5TWFpblwiOiBcIiMyMTk2ZjNcIixcblx0XCJkYXJrUHJpbWFyeURhcmtcIjogXCIjMWU4OGU1XCIsXG5cdFwiZGFya1ByaW1hcnkyMDBcIjogXCIjOTBjYWY5XCIsXG5cdFwiZGFya1ByaW1hcnk4MDBcIjogXCIjMTU2NWMwXCIsXG5cdFwiZGFya1NlY29uZGFyeUxpZ2h0XCI6IFwiI2QxYzRlOVwiLFxuXHRcImRhcmtTZWNvbmRhcnlNYWluXCI6IFwiIzdjNGRmZlwiLFxuXHRcImRhcmtTZWNvbmRhcnlEYXJrXCI6IFwiIzY1MWZmZlwiLFxuXHRcImRhcmtTZWNvbmRhcnkyMDBcIjogXCIjYjM5ZGRiXCIsXG5cdFwiZGFya1NlY29uZGFyeTgwMFwiOiBcIiM2MjAwZWFcIlxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./styles/scss/_themes-vars.module.scss\n");/***/},/***/"./styles/globals.css":/*!****************************!*\
  !*** ./styles/globals.css ***!
  \****************************/ /***/()=>{cov_5y9y4rzfh().f[11]++;cov_5y9y4rzfh().s[47]++;/***/cov_1q72jli5gt().f[9]++;},/***/"@apollo/client":/*!*********************************!*\
  !*** external "@apollo/client" ***!
  \*********************************/ /***/module=>{"use strict";cov_5y9y4rzfh().f[12]++;cov_5y9y4rzfh().s[48]++;cov_1q72jli5gt().f[10]++;cov_5y9y4rzfh().s[49]++;cov_1q72jli5gt().s[13]++;cov_5y9y4rzfh().s[50]++;module.exports=require("@apollo/client");/***/},/***/"@apollo/client/link/context":/*!**********************************************!*\
  !*** external "@apollo/client/link/context" ***!
  \**********************************************/ /***/module=>{"use strict";cov_5y9y4rzfh().f[13]++;cov_5y9y4rzfh().s[51]++;cov_1q72jli5gt().f[11]++;cov_5y9y4rzfh().s[52]++;cov_1q72jli5gt().s[14]++;cov_5y9y4rzfh().s[53]++;module.exports=require("@apollo/client/link/context");/***/},/***/"@mui/material":/*!********************************!*\
  !*** external "@mui/material" ***!
  \********************************/ /***/module=>{"use strict";cov_5y9y4rzfh().f[14]++;cov_5y9y4rzfh().s[54]++;cov_1q72jli5gt().f[12]++;cov_5y9y4rzfh().s[55]++;cov_1q72jli5gt().s[15]++;cov_5y9y4rzfh().s[56]++;module.exports=require("@mui/material");/***/},/***/"@mui/material/styles":/*!***************************************!*\
  !*** external "@mui/material/styles" ***!
  \***************************************/ /***/module=>{"use strict";cov_5y9y4rzfh().f[15]++;cov_5y9y4rzfh().s[57]++;cov_1q72jli5gt().f[13]++;cov_5y9y4rzfh().s[58]++;cov_1q72jli5gt().s[16]++;cov_5y9y4rzfh().s[59]++;module.exports=require("@mui/material/styles");/***/},/***/"react/jsx-dev-runtime":/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/ /***/module=>{"use strict";cov_5y9y4rzfh().f[16]++;cov_5y9y4rzfh().s[60]++;cov_1q72jli5gt().f[14]++;cov_5y9y4rzfh().s[61]++;cov_1q72jli5gt().s[17]++;cov_5y9y4rzfh().s[62]++;module.exports=require("react/jsx-dev-runtime");/***/}};;// load runtime
var __webpack_require__=(cov_5y9y4rzfh().s[63]++,(cov_1q72jli5gt().s[18]++,require("../webpack-runtime.js")));cov_5y9y4rzfh().s[64]++;cov_1q72jli5gt().s[19]++;cov_5y9y4rzfh().s[65]++;__webpack_require__.C(exports);cov_5y9y4rzfh().s[66]++;cov_1q72jli5gt().s[20]++;cov_5y9y4rzfh().s[67]++;var __webpack_exec__=moduleId=>{cov_5y9y4rzfh().f[17]++;cov_5y9y4rzfh().s[68]++;cov_1q72jli5gt().f[15]++;cov_5y9y4rzfh().s[69]++;cov_1q72jli5gt().s[21]++;cov_5y9y4rzfh().s[70]++;return __webpack_require__(__webpack_require__.s=moduleId);};var __webpack_exports__=(cov_5y9y4rzfh().s[71]++,(cov_1q72jli5gt().s[22]++,__webpack_exec__("./pages/_app.js")));cov_5y9y4rzfh().s[72]++;cov_1q72jli5gt().s[23]++;cov_5y9y4rzfh().s[73]++;module.exports=__webpack_exports__;})();//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,